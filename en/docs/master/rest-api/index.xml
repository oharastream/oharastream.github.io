<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ohara REST Interface | OharaStream</title>
    <link>https://oharastream.github.io/en/docs/master/rest-api/</link>
      <atom:link href="https://oharastream.github.io/en/docs/master/rest-api/index.xml" rel="self" type="application/rss+xml" />
    <description>Ohara REST Interface</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language>
    <image>
      <url>https://oharastream.github.io/images/icon_huf5f81cd12511c4e8b7f06b033f435f0f_18329_512x512_fill_lanczos_center_2.png</url>
      <title>Ohara REST Interface</title>
      <link>https://oharastream.github.io/en/docs/master/rest-api/</link>
    </image>
    
    <item>
      <title>Broker</title>
      <link>https://oharastream.github.io/en/docs/master/rest-api/brokers/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0100</pubDate>
      <guid>https://oharastream.github.io/en/docs/master/rest-api/brokers/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://kafka.apache.org/intro&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Broker&lt;/a&gt; is core of data transmission in
ohara. The topic, which is a part our data lake, is hosted by broker
cluster. The number of brokers impacts the performance of transferring
data and data durability. But it is ok to setup broker cluster in single
node when testing. As with 
&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/zookeepers/&#34;&gt;zookeeper&lt;/a&gt;, broker has
many configs also. Ohara still provide default to most configs and then
enable user to overwrite them.&lt;/p&gt;
&lt;p&gt;Broker is based on 
&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/zookeepers/&#34;&gt;zookeeper&lt;/a&gt;,
hence you have to create zookeeper cluster first. Noted
that a zookeeper cluster can be used by only a broker cluster. It will
fail if you try to multi broker cluster on same zookeeper cluster.&lt;/p&gt;
&lt;p&gt;The properties which can be set by user are shown below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; cluster name&lt;/li&gt;
&lt;li&gt;group (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; cluster group&lt;/li&gt;
&lt;li&gt;imageName (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; docker image&lt;/li&gt;
&lt;li&gt;clientPort (&lt;strong&gt;int&lt;/strong&gt;) &amp;mdash; broker client port.&lt;/li&gt;
&lt;li&gt;jmxPort (&lt;strong&gt;int&lt;/strong&gt;) &amp;mdash; port used by jmx service&lt;/li&gt;
&lt;li&gt;zookeeperClusterKey (&lt;strong&gt;object&lt;/strong&gt;) &amp;mdash; key of zookeeper cluster used
to store metadata of broker cluster
&lt;ul&gt;
&lt;li&gt;zookeeperClusterKey.group(&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; the group of
zookeeper cluster&lt;/li&gt;
&lt;li&gt;zookeeperClusterKey.name(&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the name of zookeeper
cluster&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    the following forms are legal as well: (1) &lt;code&gt;{&amp;quot;name&amp;quot;: &amp;quot;n&amp;quot;}&lt;/code&gt;, (2) &lt;code&gt;&amp;quot;n&amp;quot;&lt;/code&gt;.
Both forms are converted to &lt;code&gt;{&amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;n&amp;quot;}&lt;/code&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;nodeNames (&lt;strong&gt;array(string)&lt;/strong&gt;) &amp;mdash; the nodes running the zookeeper
process&lt;/li&gt;
&lt;li&gt;tags (&lt;strong&gt;object&lt;/strong&gt;) &amp;mdash; the user defined parameters&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following information are updated by Ohara.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;aliveNodes (&lt;strong&gt;array(string)&lt;/strong&gt;) &amp;mdash; the nodes that host the running
containers of broker cluster&lt;/li&gt;
&lt;li&gt;state (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; only started/failed broker has state
(RUNNING or DEAD)&lt;/li&gt;
&lt;li&gt;error (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; the error message from a failed
broker. If broker is fine or un-started, you won&amp;rsquo;t get this field.&lt;/li&gt;
&lt;li&gt;lastModified (&lt;strong&gt;long&lt;/strong&gt;) &amp;mdash; last modified this jar time&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;create&#34;&gt;create a broker cluster&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;POST /v0/brokers&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Request&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;bk&amp;quot;,
  &amp;quot;nodeNames&amp;quot;: [&amp;quot;node00&amp;quot;],
  &amp;quot;zookeeperClusterKey&amp;quot;: &amp;quot;zk&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;bk00&amp;quot;,
  &amp;quot;offsets.topic.replication.factor&amp;quot;: 1,
  &amp;quot;xms&amp;quot;: 1024,
  &amp;quot;routes&amp;quot;: {},
  &amp;quot;num.partitions&amp;quot;: 1,
  &amp;quot;lastModified&amp;quot;: 1578903360246,
  &amp;quot;num.network.threads&amp;quot;: 1,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;xmx&amp;quot;: 1024,
  &amp;quot;imageName&amp;quot;: &amp;quot;oharastream/broker:0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;log.dirs&amp;quot;: &amp;quot;/home/ohara/default/data&amp;quot;,
  &amp;quot;aliveNodes&amp;quot;: [],
  &amp;quot;jmxPort&amp;quot;: 42020,
  &amp;quot;num.io.threads&amp;quot;: 1,
  &amp;quot;clientPort&amp;quot;: 39614,
  &amp;quot;zookeeperClusterKey&amp;quot;: {
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;zk00&amp;quot;
  },
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
  &amp;quot;nodeNames&amp;quot;: [
    &amp;quot;node00&amp;quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;list-all-broker-clusters&#34;&gt;list all broker clusters&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/brokers&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
  {
    &amp;quot;name&amp;quot;: &amp;quot;bk00&amp;quot;,
    &amp;quot;offsets.topic.replication.factor&amp;quot;: 1,
    &amp;quot;xms&amp;quot;: 1024,
    &amp;quot;routes&amp;quot;: {},
    &amp;quot;num.partitions&amp;quot;: 1,
    &amp;quot;lastModified&amp;quot;: 1578903360246,
    &amp;quot;num.network.threads&amp;quot;: 1,
    &amp;quot;tags&amp;quot;: {},
    &amp;quot;xmx&amp;quot;: 1024,
    &amp;quot;imageName&amp;quot;: &amp;quot;oharastream/broker:0.11.0-SNAPSHOT&amp;quot;,
    &amp;quot;log.dirs&amp;quot;: &amp;quot;/home/ohara/default/data&amp;quot;,
    &amp;quot;aliveNodes&amp;quot;: [],
    &amp;quot;jmxPort&amp;quot;: 42020,
    &amp;quot;num.io.threads&amp;quot;: 1,
    &amp;quot;clientPort&amp;quot;: 39614,
    &amp;quot;zookeeperClusterKey&amp;quot;: {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;zk00&amp;quot;
    },
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
    &amp;quot;nodeNames&amp;quot;: [
      &amp;quot;node00&amp;quot;
    ]
  }
]
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;update-broker-cluster-properties&#34;&gt;update broker cluster properties&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/brokers/$name?group=$group&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;If the required broker (group, name) was not exists, we will try to use
this request as POST&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;xmx&amp;quot;: 2048
}
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;bk00&amp;quot;,
  &amp;quot;offsets.topic.replication.factor&amp;quot;: 1,
  &amp;quot;xms&amp;quot;: 1024,
  &amp;quot;routes&amp;quot;: {},
  &amp;quot;num.partitions&amp;quot;: 1,
  &amp;quot;lastModified&amp;quot;: 1578903494681,
  &amp;quot;num.network.threads&amp;quot;: 1,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;xmx&amp;quot;: 2048,
  &amp;quot;imageName&amp;quot;: &amp;quot;oharastream/broker:0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;log.dirs&amp;quot;: &amp;quot;/home/ohara/default/data&amp;quot;,
  &amp;quot;aliveNodes&amp;quot;: [],
  &amp;quot;jmxPort&amp;quot;: 42020,
  &amp;quot;num.io.threads&amp;quot;: 1,
  &amp;quot;clientPort&amp;quot;: 39614,
  &amp;quot;zookeeperClusterKey&amp;quot;: {
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;zk00&amp;quot;
  },
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
  &amp;quot;nodeNames&amp;quot;: [
    &amp;quot;node00&amp;quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;delete-a-broker-properties&#34;&gt;delete a broker properties&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;DELETE /v0/brokers/$name?group=$group&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You cannot delete properties of an non-stopped broker cluster. We will
use the default value as the query parameter &amp;ldquo;?group=&amp;rdquo; if you don&amp;rsquo;t
specify it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code&gt;204 NoContent
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    It is ok to delete an nonexistent broker cluster, and the response
is 204 NoContent.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;get&#34;&gt;get a broker cluster&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/brokers/$name?group=$group&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We will use the default value as the query parameter &amp;ldquo;?group=&amp;rdquo; if you
don&amp;rsquo;t specify it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;bk00&amp;quot;,
  &amp;quot;offsets.topic.replication.factor&amp;quot;: 1,
  &amp;quot;xms&amp;quot;: 1024,
  &amp;quot;routes&amp;quot;: {},
  &amp;quot;num.partitions&amp;quot;: 1,
  &amp;quot;lastModified&amp;quot;: 1578903494681,
  &amp;quot;num.network.threads&amp;quot;: 1,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;xmx&amp;quot;: 2048,
  &amp;quot;imageName&amp;quot;: &amp;quot;oharastream/broker:0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;log.dirs&amp;quot;: &amp;quot;/home/ohara/default/data&amp;quot;,
  &amp;quot;aliveNodes&amp;quot;: [],
  &amp;quot;jmxPort&amp;quot;: 42020,
  &amp;quot;num.io.threads&amp;quot;: 1,
  &amp;quot;clientPort&amp;quot;: 39614,
  &amp;quot;zookeeperClusterKey&amp;quot;: {
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;zk00&amp;quot;
  },
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
  &amp;quot;nodeNames&amp;quot;: [
    &amp;quot;node00&amp;quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;start-a-broker-cluster&#34;&gt;start a broker cluster&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/brokers/$name/start?group=$group&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We will use the default value as the query parameter &amp;ldquo;?group=&amp;rdquo; if you
don&amp;rsquo;t specify it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-http&#34;&gt;202 Accepted
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    You should use &lt;a href=&#34;#get&#34;&gt;Get broker cluster&lt;/a&gt; to fetch up-to-date status
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;stop-a-broker-cluster&#34;&gt;stop a broker cluster&lt;/h2&gt;
&lt;p&gt;Gracefully stopping a running broker cluster. It is disallowed to stop a
broker cluster used by a running

&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/workers/&#34;&gt;worker cluster&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/brokers/$name/stop?group=$group[&amp;amp;force=true]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We will use the default value as the query parameter &amp;ldquo;?group=&amp;rdquo; if you
don&amp;rsquo;t specify it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Query Parameters&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;force (&lt;strong&gt;boolean&lt;/strong&gt;) &amp;mdash; true if you don&amp;rsquo;t want to wait the
graceful shutdown (it can save your time but may damage your
data).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;202 Accepted
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    You should use &lt;a href=&#34;#get&#34;&gt;Get broker cluster&lt;/a&gt; to fetch up-to-date status
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;add-a-new-node-to-a-running-broker-cluster&#34;&gt;add a new node to a running broker cluster&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/brokers/$name/$nodeName?group=$group&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If you want to extend a running broker cluster, you can add a node to
share the heavy loading of a running broker cluster. However, the
balance is not triggered at once.&lt;/p&gt;
&lt;p&gt;We will use the default value as the query parameter &amp;ldquo;?group=&amp;rdquo; if you
don&amp;rsquo;t specify it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-http&#34;&gt;202 Accepted
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Although it&amp;rsquo;s a rare case, you should not use the &amp;ldquo;API keyword&amp;rdquo;
as the nodeName. For example, the following APIs are invalid and
will trigger different behavior!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/v0/brokers/$name/start&lt;/li&gt;
&lt;li&gt;/v0/brokers/$name/stop&lt;/li&gt;
&lt;/ul&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;remove-a-node-from-a-running-broker-cluster&#34;&gt;remove a node from a running broker cluster&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;DELETE /v0/brokers/$name/$nodeName?group=$group&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If your budget is limited, you can decrease the number of nodes running
broker cluster. BUT, removing a node from a running broker cluster
invoke a lot of data move. The loading may burn out the remaining nodes.&lt;/p&gt;
&lt;p&gt;We will use the default value as the query parameter &amp;ldquo;?group=&amp;rdquo; if you
don&amp;rsquo;t specify it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code&gt;204 NoContent
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    It is ok to delete an nonexistent broker node, and the response is 204 NoContent.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Connector</title>
      <link>https://oharastream.github.io/en/docs/master/rest-api/connectors/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0100</pubDate>
      <guid>https://oharastream.github.io/en/docs/master/rest-api/connectors/</guid>
      <description>&lt;p&gt;Connector is core of application in Ohara

&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/pipelines/&#34;&gt;pipeline&lt;/a&gt;. Connector has
two type - source and sink. Source connector pulls data from another
system and then push to topic. By contrast, Sink connector pulls data
from topic and then push to another system. In order to use connector in

&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/pipelines/&#34;&gt;pipeline&lt;/a&gt;, you have to
set up a connector settings in Ohara and then add it to

&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/pipelines/&#34;&gt;pipeline&lt;/a&gt;. Of course,
the connector settings must belong to a existent connector in target
worker cluster. By default, worker cluster hosts only the official
connectors. If you have more custom requirement for connector, please
follow 
&lt;a href=&#34;https://oharastream.github.io/en/docs/master/custom_connector/&#34;&gt;custom connector guideline&lt;/a&gt;
to write your connector.&lt;/p&gt;
&lt;p&gt;Apart from custom settings, common settings are required by all
connectors. The common settings are shown below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;group (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the value of group is always &amp;ldquo;default&amp;rdquo;. The
legal character is number, lowercase alphanumeric characters, or &amp;lsquo;.&amp;rsquo;&lt;/li&gt;
&lt;li&gt;name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the name of this connector. The legal
character is number, lowercase alphanumeric characters, or &amp;lsquo;.&amp;rsquo;&lt;/li&gt;
&lt;li&gt;connector.class (&lt;strong&gt;class&lt;/strong&gt;) &amp;mdash; class name of connector
implementation&lt;/li&gt;
&lt;li&gt;topicKeys(&lt;strong&gt;array(object)&lt;/strong&gt;) &amp;mdash; the source topics or target topics
for this connector&lt;/li&gt;
&lt;li&gt;columns (&lt;strong&gt;array(object)&lt;/strong&gt;) &amp;mdash; the schema of data for this
connector
&lt;ul&gt;
&lt;li&gt;columns[i].name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; origin name of column&lt;/li&gt;
&lt;li&gt;columns[i].newName (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; new name of column&lt;/li&gt;
&lt;li&gt;columns[i].dataType (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the type used to convert
data&lt;/li&gt;
&lt;li&gt;columns[i].order (&lt;strong&gt;int&lt;/strong&gt;) &amp;mdash; the order of this column&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;numberOfTasks (&lt;strong&gt;int&lt;/strong&gt;) &amp;mdash; the number of tasks&lt;/li&gt;
&lt;li&gt;workerClusterKey (&lt;strong&gt;Object&lt;/strong&gt;) &amp;mdash; target worker cluster.
&lt;ul&gt;
&lt;li&gt;workerClusterKey.group (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; the group of
cluster&lt;/li&gt;
&lt;li&gt;workerClusterKey.name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the name of cluster&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    the following forms are legal as well: (1) &lt;code&gt;{&amp;quot;name&amp;quot;: &amp;quot;n&amp;quot;}&lt;/code&gt;, (2) &lt;code&gt;&amp;quot;n&amp;quot;&lt;/code&gt;.
Both forms are converted to &lt;code&gt;{&amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;n&amp;quot;}&lt;/code&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;tags (&lt;strong&gt;object&lt;/strong&gt;) - the extra description to this object&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following information are updated by Ohara:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;group (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; connector&amp;rsquo;s group&lt;/li&gt;
&lt;li&gt;name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; connector&amp;rsquo;s name&lt;/li&gt;
&lt;li&gt;lastModified (&lt;strong&gt;long&lt;/strong&gt;) &amp;mdash; the last time to update this connector&lt;/li&gt;
&lt;li&gt;state (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; the state of a started connector&lt;/li&gt;
&lt;li&gt;aliveNodes (&lt;strong&gt;Set(string)&lt;/strong&gt;) &amp;mdash; the nodes hosting this connector&lt;/li&gt;
&lt;li&gt;error (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; the error message from a failed
connector. If the connector is fine or un-started, you won&amp;rsquo;t get
this field.&lt;/li&gt;
&lt;li&gt;tasksStatus (&lt;strong&gt;Array(object)&lt;/strong&gt;) &amp;mdash; the tasks status of this connector
&lt;ul&gt;
&lt;li&gt;tasksStatus[i].state (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the state of a started task.&lt;/li&gt;
&lt;li&gt;tasksStatus[i].nodeName (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the node hosting this task&lt;/li&gt;
&lt;li&gt;tasksStatus[i].error (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; the error
message from a failed task. If the task is fine or un-started,
you won&amp;rsquo;t get this field.&lt;/li&gt;
&lt;li&gt;tasksStatus[i].coordinator (&lt;strong&gt;boolean&lt;/strong&gt;) &amp;mdash; true if this status
is coordinator. otherwise, false&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://oharastream.github.io/en/docs/master/custom_connector/#metrics&#34;&gt;nodeMetrics&lt;/a&gt; (&lt;strong&gt;object&lt;/strong&gt;) &amp;mdash;
the metrics from a running connector
&lt;ul&gt;
&lt;li&gt;meters (&lt;strong&gt;array(object)&lt;/strong&gt;) &amp;mdash; the metrics in meter type
&lt;ul&gt;
&lt;li&gt;meters[i].name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the number of this meter
(normally, it is unique)&lt;/li&gt;
&lt;li&gt;meters[i].value (&lt;strong&gt;double&lt;/strong&gt;) &amp;mdash; the value in double&lt;/li&gt;
&lt;li&gt;meters[i].valueInPerSec (&lt;strong&gt;double&lt;/strong&gt;) &amp;mdash; the average value
in per second&lt;/li&gt;
&lt;li&gt;meters[i].unit (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the unit of value&lt;/li&gt;
&lt;li&gt;meters[i].document (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; human-readable
description to this meter&lt;/li&gt;
&lt;li&gt;meters[i].queryTime (&lt;strong&gt;Long&lt;/strong&gt;) &amp;mdash; the time we query this
meter from remote nodes&lt;/li&gt;
&lt;li&gt;meters[i].startTime (&lt;strong&gt;Long&lt;/strong&gt;) &amp;mdash; the time to start this
meter (not all services offer this record)&lt;/li&gt;
&lt;li&gt;meters[i].lastModified (&lt;strong&gt;Long&lt;/strong&gt;) &amp;mdash; the time of modifying
metrics&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following keys are internal and protected so you can&amp;rsquo;t define them
in creating/updating connector.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;connectorKey &amp;mdash; It points to the really (group, name) for the
connector running in kafka.&lt;/li&gt;
&lt;li&gt;topics &amp;mdash; It points to the really topic names in kafka for the
connector running in kafka.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;create-settings&#34;&gt;create the settings of connector&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;POST /v0/connectors&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It is ok to lack some common settings when creating settings for a
connector. However, it is illegal to start a connector with incomplete
settings. For example, storing the settings consisting of only
&lt;strong&gt;connector.name&lt;/strong&gt; is ok. But stating a connector with above incomplete
settings will introduce a error.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Request&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;name&amp;quot;:&amp;quot;perf&amp;quot;,
  &amp;quot;topicKeys&amp;quot;: [&amp;quot;t0&amp;quot;],
  &amp;quot;workerClusterKey&amp;quot;: &amp;quot;wk&amp;quot;,
  &amp;quot;connector.class&amp;quot;:&amp;quot;oharastream.ohara.connector.perf.PerfSource&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;header.converter&amp;quot;: &amp;quot;org.apache.kafka.connect.converters.ByteArrayConverter&amp;quot;,
  &amp;quot;author&amp;quot;: &amp;quot;root&amp;quot;,
  &amp;quot;topicKeys&amp;quot;: [
    {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;t0&amp;quot;
    }
  ],
  &amp;quot;name&amp;quot;: &amp;quot;perf&amp;quot;,
  &amp;quot;check.rule&amp;quot;: &amp;quot;NONE&amp;quot;,
  &amp;quot;key.converter&amp;quot;: &amp;quot;org.apache.kafka.connect.converters.ByteArrayConverter&amp;quot;,
  &amp;quot;lastModified&amp;quot;: 1577282907085,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;value.converter&amp;quot;: &amp;quot;org.apache.kafka.connect.converters.ByteArrayConverter&amp;quot;,
  &amp;quot;perf.cell.length&amp;quot;: 10,
  &amp;quot;tasks.max&amp;quot;: 1,
  &amp;quot;perf.batch&amp;quot;: 10,
  &amp;quot;perf.frequency&amp;quot;: &amp;quot;1000 milliseconds&amp;quot;,
  &amp;quot;connector.class&amp;quot;: &amp;quot;oharastream.ohara.connector.perf.PerfSource&amp;quot;,
  &amp;quot;revision&amp;quot;: &amp;quot;baafe4a3d875e5e5028b686c4f74f26cfd8b1b66&amp;quot;,
  &amp;quot;version&amp;quot;: &amp;quot;0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;columns&amp;quot;: [],
  &amp;quot;nodeMetrics&amp;quot;: {
    &amp;quot;node00&amp;quot;: {
      &amp;quot;meters&amp;quot;: [
        {
          &amp;quot;document&amp;quot;: &amp;quot;number of ignored messages&amp;quot;,
          &amp;quot;lastModified&amp;quot;: 1585068827510,
          &amp;quot;name&amp;quot;: &amp;quot;ignored.message.number&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585068870341,
          &amp;quot;startTime&amp;quot;: 1585068827510,
          &amp;quot;unit&amp;quot;: &amp;quot;messages&amp;quot;,
          &amp;quot;value&amp;quot;: 0.0,
          &amp;quot;valueInPerSec&amp;quot;: 0.0
        },
        {
          &amp;quot;document&amp;quot;: &amp;quot;size (in bytes) of messages&amp;quot;,
          &amp;quot;lastModified&amp;quot;: 1585068870445,
          &amp;quot;name&amp;quot;: &amp;quot;message.size&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585068870341,
          &amp;quot;startTime&amp;quot;: 1585068827510,
          &amp;quot;unit&amp;quot;: &amp;quot;bytes&amp;quot;,
          &amp;quot;value&amp;quot;: 8.19825E+8,
          &amp;quot;valueInPerSec&amp;quot;: 19094561.546523817
        },
        {
          &amp;quot;document&amp;quot;: &amp;quot;size of ignored messages&amp;quot;,
          &amp;quot;lastModified&amp;quot;: 1585068827510,
          &amp;quot;name&amp;quot;: &amp;quot;ignored.message.size&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585068870341,
          &amp;quot;startTime&amp;quot;: 1585068827510,
          &amp;quot;unit&amp;quot;: &amp;quot;bytes&amp;quot;,
          &amp;quot;value&amp;quot;: 0.0,
          &amp;quot;valueInPerSec&amp;quot;: 0.0
        },
        {
          &amp;quot;document&amp;quot;: &amp;quot;number of messages&amp;quot;,
          &amp;quot;lastModified&amp;quot;: 1585068870445,
          &amp;quot;name&amp;quot;: &amp;quot;message.number&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585068870341,
          &amp;quot;startTime&amp;quot;: 1585068827508,
          &amp;quot;unit&amp;quot;: &amp;quot;messages&amp;quot;,
          &amp;quot;value&amp;quot;: 1275000.0,
          &amp;quot;valueInPerSec&amp;quot;: 29694.66893355381
        }
      ]
    }
  },
  &amp;quot;workerClusterKey&amp;quot;: {
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;wk&amp;quot;
  },
  &amp;quot;tasksStatus&amp;quot;: [],
  &amp;quot;kind&amp;quot;: &amp;quot;source&amp;quot;,
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;update-the-settings-of-connector&#34;&gt;update the settings of connector&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/connectors/${name}?group=${group}&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    you cannot update a non-stopped connector.
  &lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Request&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;topicKeys&amp;quot;: [
    &amp;quot;t1&amp;quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;header.converter&amp;quot;: &amp;quot;org.apache.kafka.connect.converters.ByteArrayConverter&amp;quot;,
  &amp;quot;author&amp;quot;: &amp;quot;root&amp;quot;,
  &amp;quot;topicKeys&amp;quot;: [
    {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;t1&amp;quot;
    }
  ],
  &amp;quot;name&amp;quot;: &amp;quot;perf&amp;quot;,
  &amp;quot;check.rule&amp;quot;: &amp;quot;NONE&amp;quot;,
  &amp;quot;key.converter&amp;quot;: &amp;quot;org.apache.kafka.connect.converters.ByteArrayConverter&amp;quot;,
  &amp;quot;lastModified&amp;quot;: 1577283010533,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;value.converter&amp;quot;: &amp;quot;org.apache.kafka.connect.converters.ByteArrayConverter&amp;quot;,
  &amp;quot;perf.cell.length&amp;quot;: 10,
  &amp;quot;tasks.max&amp;quot;: 1,
  &amp;quot;perf.batch&amp;quot;: 10,
  &amp;quot;perf.frequency&amp;quot;: &amp;quot;1000 milliseconds&amp;quot;,
  &amp;quot;connector.class&amp;quot;: &amp;quot;oharastream.ohara.connector.perf.PerfSource&amp;quot;,
  &amp;quot;revision&amp;quot;: &amp;quot;baafe4a3d875e5e5028b686c4f74f26cfd8b1b66&amp;quot;,
  &amp;quot;version&amp;quot;: &amp;quot;0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;columns&amp;quot;: [],
  &amp;quot;nodeMetrics&amp;quot;: {
    &amp;quot;node00&amp;quot;: {
      &amp;quot;meters&amp;quot;: [
        {
          &amp;quot;document&amp;quot;: &amp;quot;number of ignored messages&amp;quot;,
          &amp;quot;lastModified&amp;quot;: 1585068827510,
          &amp;quot;name&amp;quot;: &amp;quot;ignored.message.number&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585068870341,
          &amp;quot;startTime&amp;quot;: 1585068827510,
          &amp;quot;unit&amp;quot;: &amp;quot;messages&amp;quot;,
          &amp;quot;value&amp;quot;: 0.0,
          &amp;quot;valueInPerSec&amp;quot;: 0.0
        },
        {
          &amp;quot;document&amp;quot;: &amp;quot;size (in bytes) of messages&amp;quot;,
          &amp;quot;lastModified&amp;quot;: 1585068870445,
          &amp;quot;name&amp;quot;: &amp;quot;message.size&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585068870341,
          &amp;quot;startTime&amp;quot;: 1585068827510,
          &amp;quot;unit&amp;quot;: &amp;quot;bytes&amp;quot;,
          &amp;quot;value&amp;quot;: 8.19825E+8,
          &amp;quot;valueInPerSec&amp;quot;: 19094561.546523817
        },
        {
          &amp;quot;document&amp;quot;: &amp;quot;size of ignored messages&amp;quot;,
          &amp;quot;lastModified&amp;quot;: 1585068827510,
          &amp;quot;name&amp;quot;: &amp;quot;ignored.message.size&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585068870341,
          &amp;quot;startTime&amp;quot;: 1585068827510,
          &amp;quot;unit&amp;quot;: &amp;quot;bytes&amp;quot;,
          &amp;quot;value&amp;quot;: 0.0,
          &amp;quot;valueInPerSec&amp;quot;: 0.0
        },
        {
          &amp;quot;document&amp;quot;: &amp;quot;number of messages&amp;quot;,
          &amp;quot;lastModified&amp;quot;: 1585068870445,
          &amp;quot;name&amp;quot;: &amp;quot;message.number&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585068870341,
          &amp;quot;startTime&amp;quot;: 1585068827508,
          &amp;quot;unit&amp;quot;: &amp;quot;messages&amp;quot;,
          &amp;quot;value&amp;quot;: 1275000.0,
          &amp;quot;valueInPerSec&amp;quot;: 29694.66893355381
        }
      ]
    }
  },
  &amp;quot;workerClusterKey&amp;quot;: {
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;wk&amp;quot;
  },
  &amp;quot;tasksStatus&amp;quot;: [],
  &amp;quot;kind&amp;quot;: &amp;quot;source&amp;quot;,
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;list-information-of-all-connectors&#34;&gt;list information of all connectors&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/connectors&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;the accepted query keys are listed below.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;group&lt;/li&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;li&gt;lastModified&lt;/li&gt;
&lt;li&gt;tags&lt;/li&gt;
&lt;li&gt;tag - this field is similar to tags but it addresses the &amp;ldquo;contain&amp;rdquo; behavior.&lt;/li&gt;
&lt;li&gt;key&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
  {
    &amp;quot;header.converter&amp;quot;: &amp;quot;org.apache.kafka.connect.converters.ByteArrayConverter&amp;quot;,
    &amp;quot;author&amp;quot;: &amp;quot;root&amp;quot;,
    &amp;quot;topicKeys&amp;quot;: [
      {
        &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
        &amp;quot;name&amp;quot;: &amp;quot;t1&amp;quot;
      }
    ],
    &amp;quot;name&amp;quot;: &amp;quot;perf&amp;quot;,
    &amp;quot;check.rule&amp;quot;: &amp;quot;NONE&amp;quot;,
    &amp;quot;key.converter&amp;quot;: &amp;quot;org.apache.kafka.connect.converters.ByteArrayConverter&amp;quot;,
    &amp;quot;lastModified&amp;quot;: 1577283010533,
    &amp;quot;tags&amp;quot;: {},
    &amp;quot;value.converter&amp;quot;: &amp;quot;org.apache.kafka.connect.converters.ByteArrayConverter&amp;quot;,
    &amp;quot;perf.cell.length&amp;quot;: 10,
    &amp;quot;tasks.max&amp;quot;: 1,
    &amp;quot;perf.batch&amp;quot;: 10,
    &amp;quot;perf.frequency&amp;quot;: &amp;quot;1000 milliseconds&amp;quot;,
    &amp;quot;connector.class&amp;quot;: &amp;quot;oharastream.ohara.connector.perf.PerfSource&amp;quot;,
    &amp;quot;revision&amp;quot;: &amp;quot;baafe4a3d875e5e5028b686c4f74f26cfd8b1b66&amp;quot;,
    &amp;quot;version&amp;quot;: &amp;quot;0.11.0-SNAPSHOT&amp;quot;,
    &amp;quot;columns&amp;quot;: [],
  &amp;quot;nodeMetrics&amp;quot;: {
    &amp;quot;node00&amp;quot;: {
      &amp;quot;meters&amp;quot;: [
        {
          &amp;quot;document&amp;quot;: &amp;quot;number of ignored messages&amp;quot;,
          &amp;quot;lastModified&amp;quot;: 1585068827510,
          &amp;quot;name&amp;quot;: &amp;quot;ignored.message.number&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585068870341,
          &amp;quot;startTime&amp;quot;: 1585068827510,
          &amp;quot;unit&amp;quot;: &amp;quot;messages&amp;quot;,
          &amp;quot;value&amp;quot;: 0.0,
          &amp;quot;valueInPerSec&amp;quot;: 0.0
        },
        {
          &amp;quot;document&amp;quot;: &amp;quot;size (in bytes) of messages&amp;quot;,
          &amp;quot;lastModified&amp;quot;: 1585068870445,
          &amp;quot;name&amp;quot;: &amp;quot;message.size&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585068870341,
          &amp;quot;startTime&amp;quot;: 1585068827510,
          &amp;quot;unit&amp;quot;: &amp;quot;bytes&amp;quot;,
          &amp;quot;value&amp;quot;: 8.19825E+8,
          &amp;quot;valueInPerSec&amp;quot;: 19094561.546523817
        },
        {
          &amp;quot;document&amp;quot;: &amp;quot;size of ignored messages&amp;quot;,
          &amp;quot;lastModified&amp;quot;: 1585068827510,
          &amp;quot;name&amp;quot;: &amp;quot;ignored.message.size&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585068870341,
          &amp;quot;startTime&amp;quot;: 1585068827510,
          &amp;quot;unit&amp;quot;: &amp;quot;bytes&amp;quot;,
          &amp;quot;value&amp;quot;: 0.0,
          &amp;quot;valueInPerSec&amp;quot;: 0.0
        },
        {
          &amp;quot;document&amp;quot;: &amp;quot;number of messages&amp;quot;,
          &amp;quot;lastModified&amp;quot;: 1585068870445,
          &amp;quot;name&amp;quot;: &amp;quot;message.number&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585068870341,
          &amp;quot;startTime&amp;quot;: 1585068827508,
          &amp;quot;unit&amp;quot;: &amp;quot;messages&amp;quot;,
          &amp;quot;value&amp;quot;: 1275000.0,
          &amp;quot;valueInPerSec&amp;quot;: 29694.66893355381
        }
      ]
    }
  },
    &amp;quot;workerClusterKey&amp;quot;: {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;wk&amp;quot;
    },
    &amp;quot;tasksStatus&amp;quot;: [],
    &amp;quot;kind&amp;quot;: &amp;quot;source&amp;quot;,
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;
  }
]
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;delete&#34;&gt;delete a connector&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;DELETE /v0/connectors/${name}?group=${group}&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Deleting the settings used by a running connector is not allowed. You
should 
&lt;a href=&#34;#stop&#34;&gt;stop&lt;/a&gt; connector before deleting it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;204 NoContent
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    It is ok to delete an jar from an nonexistent connector or a running
connector, and the response is 204 NoContent.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;get-info&#34;&gt;get information of connector&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/connectors/${name}?group=${group}&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;header.converter&amp;quot;: &amp;quot;org.apache.kafka.connect.converters.ByteArrayConverter&amp;quot;,
  &amp;quot;author&amp;quot;: &amp;quot;root&amp;quot;,
  &amp;quot;topicKeys&amp;quot;: [
    {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;t1&amp;quot;
    }
  ],
  &amp;quot;name&amp;quot;: &amp;quot;perf&amp;quot;,
  &amp;quot;check.rule&amp;quot;: &amp;quot;NONE&amp;quot;,
  &amp;quot;key.converter&amp;quot;: &amp;quot;org.apache.kafka.connect.converters.ByteArrayConverter&amp;quot;,
  &amp;quot;lastModified&amp;quot;: 1577283010533,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;value.converter&amp;quot;: &amp;quot;org.apache.kafka.connect.converters.ByteArrayConverter&amp;quot;,
  &amp;quot;perf.cell.length&amp;quot;: 10,
  &amp;quot;tasks.max&amp;quot;: 1,
  &amp;quot;perf.batch&amp;quot;: 10,
  &amp;quot;perf.frequency&amp;quot;: &amp;quot;1000 milliseconds&amp;quot;,
  &amp;quot;connector.class&amp;quot;: &amp;quot;oharastream.ohara.connector.perf.PerfSource&amp;quot;,
  &amp;quot;revision&amp;quot;: &amp;quot;baafe4a3d875e5e5028b686c4f74f26cfd8b1b66&amp;quot;,
  &amp;quot;version&amp;quot;: &amp;quot;0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;columns&amp;quot;: [],
  &amp;quot;nodeMetrics&amp;quot;: {
    &amp;quot;node00&amp;quot;: {
      &amp;quot;meters&amp;quot;: [
        {
          &amp;quot;document&amp;quot;: &amp;quot;number of ignored messages&amp;quot;,
          &amp;quot;lastModified&amp;quot;: 1585068827510,
          &amp;quot;name&amp;quot;: &amp;quot;ignored.message.number&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585068870341,
          &amp;quot;startTime&amp;quot;: 1585068827510,
          &amp;quot;unit&amp;quot;: &amp;quot;messages&amp;quot;,
          &amp;quot;value&amp;quot;: 0.0,
          &amp;quot;valueInPerSec&amp;quot;: 0.0
        },
        {
          &amp;quot;document&amp;quot;: &amp;quot;size (in bytes) of messages&amp;quot;,
          &amp;quot;lastModified&amp;quot;: 1585068870445,
          &amp;quot;name&amp;quot;: &amp;quot;message.size&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585068870341,
          &amp;quot;startTime&amp;quot;: 1585068827510,
          &amp;quot;unit&amp;quot;: &amp;quot;bytes&amp;quot;,
          &amp;quot;value&amp;quot;: 8.19825E+8,
          &amp;quot;valueInPerSec&amp;quot;: 19094561.546523817
        },
        {
          &amp;quot;document&amp;quot;: &amp;quot;size of ignored messages&amp;quot;,
          &amp;quot;lastModified&amp;quot;: 1585068827510,
          &amp;quot;name&amp;quot;: &amp;quot;ignored.message.size&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585068870341,
          &amp;quot;startTime&amp;quot;: 1585068827510,
          &amp;quot;unit&amp;quot;: &amp;quot;bytes&amp;quot;,
          &amp;quot;value&amp;quot;: 0.0,
          &amp;quot;valueInPerSec&amp;quot;: 0.0
        },
        {
          &amp;quot;document&amp;quot;: &amp;quot;number of messages&amp;quot;,
          &amp;quot;lastModified&amp;quot;: 1585068870445,
          &amp;quot;name&amp;quot;: &amp;quot;message.number&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585068870341,
          &amp;quot;startTime&amp;quot;: 1585068827508,
          &amp;quot;unit&amp;quot;: &amp;quot;messages&amp;quot;,
          &amp;quot;value&amp;quot;: 1275000.0,
          &amp;quot;valueInPerSec&amp;quot;: 29694.66893355381
        }
      ]
    }
  },
  &amp;quot;workerClusterKey&amp;quot;: {
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;wk&amp;quot;
  },
  &amp;quot;tasksStatus&amp;quot;: [],
  &amp;quot;kind&amp;quot;: &amp;quot;source&amp;quot;,
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;start-a-connector&#34;&gt;start a connector&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/connectors/${name}/start?group=${group}&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Ohara will send a start request to specific worker cluster to start the
connector with stored settings, and then make a response to called. The
connector is executed async so the connector may be still in starting
after you retrieve the response. You can send 
&lt;a href=&#34;#get-info&#34;&gt;GET request&lt;/a&gt;
to see the state of connector. This request is idempotent so it is safe
to retry this command repeatedly.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code&gt;202 Accepted
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    You should use
&lt;a href=&#34;#get-info&#34;&gt;Get Connector info&lt;/a&gt; to fetch up-to-date status
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;stop&#34;&gt;stop a connector&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/connectors/${name}/stop?group=${group}&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Ohara will send a stop request to specific worker cluster to stop the
connector. The stopped connector will be removed from worker cluster.
The settings of connector is still kept by Ohara so you can start the
connector with same settings again in the future. If you want to delete
the connector totally, you should stop the connector and then

&lt;a href=&#34;#delete&#34;&gt;delete&lt;/a&gt; it. This
request is idempotent so it is safe to send this request repeatedly.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code&gt;202 Accepted
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    You should use &lt;a href=&#34;#get-info&#34;&gt;Get Connector info&lt;/a&gt; to fetch up-to-date status
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;pause-a-connector&#34;&gt;pause a connector&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/connectors/${name}/pause?group=${group}&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Pausing a connector is to disable connector to pull/push data from/to
source/sink. The connector is still alive in kafka. This request is
idempotent so it is safe to send this request repeatedly.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code&gt;202 Accepted
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    You should use &lt;a href=&#34;#get-info&#34;&gt;Get Connector info&lt;/a&gt; to fetch up-to-date status
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;resume-a-connector&#34;&gt;resume a connector&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/connectors/${name}/resume?group=${group}&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Resuming a connector is to enable connector to pull/push data from/to
source/sink. This request is idempotent so it is safe to retry this
command repeatedly.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code&gt;202 Accepted
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    You should use &lt;a href=&#34;#get-info&#34;&gt;Get Connector info&lt;/a&gt; to fetch up-to-date status
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Container</title>
      <link>https://oharastream.github.io/en/docs/master/rest-api/containers/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0100</pubDate>
      <guid>https://oharastream.github.io/en/docs/master/rest-api/containers/</guid>
      <description>&lt;p&gt;Each processes managed by Ohara is based on docker container. In most
cases, user don&amp;rsquo;t need to know the details of containers since the
management of containers is on Ohara&amp;rsquo;s shoulder. However, Ohara
understand that we all have curious brain so Ohara supports to display
the container&amp;rsquo;s details of a running cluster. Noted that the context may
be changed between different release of Ohara. And the distinct
implementations of container manager possibly provide different context
of containers.&lt;/p&gt;
&lt;h2 id=&#34;retrieve-the-container-details-of-a-running-cluster&#34;&gt;retrieve the container details of a running cluster&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/containers/$clusterName?group=$clusterGroup&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;strong&gt;cluster name&lt;/strong&gt; may be mapped to different services (of course,
it would be better to avoid using same name on different services),
hence, the returned JSON is in array type. The details of elements
are shown below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;clusterKey (&lt;strong&gt;Object&lt;/strong&gt;) &amp;mdash; cluster key&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;clusterType (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; cluster type&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;containers (&lt;strong&gt;array(object)&lt;/strong&gt;) &amp;mdash; the container in this cluster&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;environments (&lt;strong&gt;object&lt;/strong&gt;) &amp;mdash; the environment variables of
container&lt;/li&gt;
&lt;li&gt;name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the name of container&lt;/li&gt;
&lt;li&gt;hostname (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; hostname of container&lt;/li&gt;
&lt;li&gt;size (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the disk size used by this container&lt;/li&gt;
&lt;li&gt;state (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; the state of container&lt;/li&gt;
&lt;li&gt;portMappings (&lt;strong&gt;array(object)&lt;/strong&gt;) &amp;mdash; the exported ports of
this container
&lt;ul&gt;
&lt;li&gt;portMappings[i].hostIp (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the network
interface of container host&lt;/li&gt;
&lt;li&gt;portMappings[i].hostPort (&lt;strong&gt;int&lt;/strong&gt;) &amp;mdash; host port&lt;/li&gt;
&lt;li&gt;portMappings[i].containerPort (&lt;strong&gt;int&lt;/strong&gt;) &amp;mdash; container
port&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;nodeName (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the node which host this container&lt;/li&gt;
&lt;li&gt;imageName (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the image used to create this
container&lt;/li&gt;
&lt;li&gt;id (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; container id&lt;/li&gt;
&lt;li&gt;kind (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; Ohara supports the DOCKER and K8S mode&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
  {
    &amp;quot;clusterKey&amp;quot;: {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;wk00&amp;quot;
    },
    &amp;quot;clusterType&amp;quot;: &amp;quot;worker&amp;quot;,
    &amp;quot;containers&amp;quot;: [
      {
        &amp;quot;environments&amp;quot;: {
          &amp;quot;KAFKA_JMX_OPTS&amp;quot;: &amp;quot;-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=41484 -Dcom.sun.management.jmxremote.rmi.port=41484 -Djava.rmi.server.hostname=ohara-release-test-00&amp;quot;,
          &amp;quot;KAFKA_HEAP_OPTS&amp;quot;: &amp;quot;-Xms1024M -Xmx1024M&amp;quot;,
          &amp;quot;WORKER_PLUGIN_URLS&amp;quot;: &amp;quot;&amp;quot;,
          &amp;quot;WORKER_SHARED_JAR_URLS&amp;quot;: &amp;quot;&amp;quot;
        },
        &amp;quot;name&amp;quot;: &amp;quot;default-wk00-worker-3b8c71a&amp;quot;,
        &amp;quot;hostname&amp;quot;: &amp;quot;wk00-worker-5739cbd&amp;quot;,
        &amp;quot;size&amp;quot;: -1,
        &amp;quot;state&amp;quot;: &amp;quot;RUNNING&amp;quot;,
        &amp;quot;portMappings&amp;quot;: [
          {
            &amp;quot;hostIp&amp;quot;: &amp;quot;10.2.10.30&amp;quot;,
            &amp;quot;hostPort&amp;quot;: 36789,
            &amp;quot;containerPort&amp;quot;: 36789
          },
          {
            &amp;quot;hostIp&amp;quot;: &amp;quot;10.2.10.30&amp;quot;,
            &amp;quot;hostPort&amp;quot;: 41484,
            &amp;quot;containerPort&amp;quot;: 41484
          }
        ],
        &amp;quot;nodeName&amp;quot;: &amp;quot;ohara-release-test-00&amp;quot;,
        &amp;quot;imageName&amp;quot;: &amp;quot;oharastream/connect-worker:0.11.0-SNAPSHOT&amp;quot;,
        &amp;quot;id&amp;quot;: &amp;quot;2a3b3872-35ab-11ea-8a18-a29736512df3&amp;quot;,
        &amp;quot;kind&amp;quot;: &amp;quot;K8S&amp;quot;
      }
    ]
  }
]
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Files</title>
      <link>https://oharastream.github.io/en/docs/master/rest-api/files/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0100</pubDate>
      <guid>https://oharastream.github.io/en/docs/master/rest-api/files/</guid>
      <description>&lt;p&gt;Ohara encourages user to write custom application if the official
applications can satisfy requirements for your use case. Jar APIs is a
useful entry of putting your jar on Ohara and then start related
services with it. For example,

&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/workers/#rest-workers-create&#34;&gt;Worker APIs&lt;/a&gt; accept
a &lt;strong&gt;sharedJarKeys&lt;/strong&gt; element which can carry the jar name pointing to an
existent jar in Ohara. The worker cluster will load all connectors of
the input jar, and then you are able to use the connectors on the worker
cluster.&lt;/p&gt;
&lt;p&gt;The File API upload jar file to use by the

&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/workers/&#34;&gt;Worker&lt;/a&gt; and 
&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/streams/&#34;&gt;Stream&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    The file used by a worker or stream can&amp;rsquo;t be either updated or deleted.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The properties stored by Ohara are shown below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the file name without extension. The legal
character is number, lowercase alphanumeric characters, or &amp;lsquo;.&amp;rsquo;&lt;/li&gt;
&lt;li&gt;group (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the group name (we use this field to separate
different workspaces). The legal character is number, lowercase
alphanumeric characters, or &amp;lsquo;.&amp;rsquo;&lt;/li&gt;
&lt;li&gt;size (&lt;strong&gt;long&lt;/strong&gt;) &amp;mdash; file size&lt;/li&gt;
&lt;li&gt;url (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; url to download this jar from Ohara
Configurator. Noted not all jars are downloadable to user.&lt;/li&gt;
&lt;li&gt;lastModified (&lt;strong&gt;long&lt;/strong&gt;) &amp;mdash; the time of uploading this file&lt;/li&gt;
&lt;li&gt;tags (&lt;strong&gt;object&lt;/strong&gt;) &amp;mdash; the user defined parameters&lt;/li&gt;
&lt;li&gt;bytes (&lt;strong&gt;array(object)&lt;/strong&gt;) &amp;mdash; read file content to bytes&lt;/li&gt;
&lt;li&gt;classInfos (&lt;strong&gt;array(object)&lt;/strong&gt;) &amp;mdash; the information of available
classes in this file
&lt;ul&gt;
&lt;li&gt;classInfos[i].className &amp;mdash; the name of this class&lt;/li&gt;
&lt;li&gt;classInfos[i].classType &amp;mdash; the type of this class. for example,
topic, source connector, sink connector or stream app&lt;/li&gt;
&lt;li&gt;classInfos[i].settingDefinitions &amp;mdash; the definitions of this
class&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    The field &amp;ldquo;classInfos&amp;rdquo; is empty if the file is NOT a valid jar.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;upload-a-file-to-ohara&#34;&gt;upload a file to Ohara&lt;/h2&gt;
&lt;p&gt;Upload a file to Ohara with field name : &amp;ldquo;jar&amp;rdquo; and group name : &amp;ldquo;group&amp;rdquo;
the text field &amp;ldquo;group&amp;rdquo; could be empty and we will generate a random
string.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;POST /v0/files&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Request
&lt;pre&gt;&lt;code class=&#34;language-http&#34;&gt;Content-Type: multipart/form-data
file=&amp;quot;ohara-it-stream.jar&amp;quot;
group=&amp;quot;default&amp;quot;
tags={}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    You have to specify the file name since it is a part of metadata
stored by Ohara. Noted, the later uploaded file can overwrite the
older one
  &lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;ohara-it-stream.jar&amp;quot;,
  &amp;quot;size&amp;quot;: 1896,
  &amp;quot;url&amp;quot;: &amp;quot;http://localhost:12345/v0/downloadFiles/default/ohara-it-stream.jar&amp;quot;,
  &amp;quot;lastModified&amp;quot;: 1578967196525,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;classInfos&amp;quot;: [
    {
      &amp;quot;classType&amp;quot;: &amp;quot;stream&amp;quot;,
      &amp;quot;className&amp;quot;: &amp;quot;oharastream.ohara.it.stream.DumbStream&amp;quot;,
      &amp;quot;settingDefinitions&amp;quot;: [
        {
          &amp;quot;blacklist&amp;quot;: [],
          &amp;quot;reference&amp;quot;: &amp;quot;BROKER_CLUSTER&amp;quot;,
          &amp;quot;displayName&amp;quot;: &amp;quot;Broker cluster key&amp;quot;,
          &amp;quot;regex&amp;quot;: null,
          &amp;quot;internal&amp;quot;: false,
          &amp;quot;permission&amp;quot;: &amp;quot;EDITABLE&amp;quot;,
          &amp;quot;documentation&amp;quot;: &amp;quot;the key of broker cluster used to transfer data for this stream&amp;quot;,
          &amp;quot;necessary&amp;quot;: &amp;quot;REQUIRED&amp;quot;,
          &amp;quot;valueType&amp;quot;: &amp;quot;OBJECT_KEY&amp;quot;,
          &amp;quot;tableKeys&amp;quot;: [],
          &amp;quot;orderInGroup&amp;quot;: 0,
          &amp;quot;key&amp;quot;: &amp;quot;brokerClusterKey&amp;quot;,
          &amp;quot;defaultValue&amp;quot;: null,
          &amp;quot;recommendedValues&amp;quot;: [],
          &amp;quot;group&amp;quot;: &amp;quot;core&amp;quot;
        }
      ]
    }
  ],
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;list-all-jars&#34;&gt;list all jars&lt;/h2&gt;
&lt;p&gt;Get all jars from specific group of query parameter. If no query
parameter, wll return all jars.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;GET /v0/files?group=default&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
  {
    &amp;quot;name&amp;quot;: &amp;quot;ohara-it-stream.jar&amp;quot;,
    &amp;quot;size&amp;quot;: 1896,
    &amp;quot;url&amp;quot;: &amp;quot;http://localhost:5000/v0/downloadFiles/default/ohara-it-stream.jar&amp;quot;,
    &amp;quot;lastModified&amp;quot;: 1578973197877,
    &amp;quot;tags&amp;quot;: {},
    &amp;quot;classInfos&amp;quot;: [
      {
        &amp;quot;classType&amp;quot;: &amp;quot;stream&amp;quot;,
        &amp;quot;className&amp;quot;: &amp;quot;oharastream.ohara.it.stream.DumbStream&amp;quot;,
        &amp;quot;settingDefinitions&amp;quot;: [
          {
            &amp;quot;blacklist&amp;quot;: [],
            &amp;quot;reference&amp;quot;: &amp;quot;BROKER_CLUSTER&amp;quot;,
            &amp;quot;displayName&amp;quot;: &amp;quot;Broker cluster key&amp;quot;,
            &amp;quot;regex&amp;quot;: null,
            &amp;quot;internal&amp;quot;: false,
            &amp;quot;permission&amp;quot;: &amp;quot;EDITABLE&amp;quot;,
            &amp;quot;documentation&amp;quot;: &amp;quot;the key of broker cluster used to transfer data for this stream&amp;quot;,
            &amp;quot;necessary&amp;quot;: &amp;quot;REQUIRED&amp;quot;,
            &amp;quot;valueType&amp;quot;: &amp;quot;OBJECT_KEY&amp;quot;,
            &amp;quot;tableKeys&amp;quot;: [],
            &amp;quot;orderInGroup&amp;quot;: 0,
            &amp;quot;key&amp;quot;: &amp;quot;brokerClusterKey&amp;quot;,
            &amp;quot;defaultValue&amp;quot;: null,
            &amp;quot;recommendedValues&amp;quot;: [],
            &amp;quot;group&amp;quot;: &amp;quot;core&amp;quot;
          },
        ]
      }
    ],
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;
  }
]
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;delete-a-file&#34;&gt;delete a file&lt;/h2&gt;
&lt;p&gt;Delete a file with specific name and group. Note: the query parameter
must exist.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;DELETE /v0/files/$name?group=default&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code&gt;204 NoContent
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    It is ok to delete a nonexistent jar, and the response is 204
NoContent. If you delete a file is used by other services, you also
break the scalability of service as you can&amp;rsquo;t run the jar on any new
nodes
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;get-a-file&#34;&gt;get a file&lt;/h2&gt;
&lt;p&gt;Get a file with specific name and group. Note: the query parameter must
exists.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;GET /v0/files/$name?group=default&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;ohara-it-stream.jar&amp;quot;,
  &amp;quot;size&amp;quot;: 1896,
  &amp;quot;url&amp;quot;: &amp;quot;http://localhost:5000/v0/downloadFiles/default/ohara-it-stream.jar&amp;quot;,
  &amp;quot;lastModified&amp;quot;: 1578973197877,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;classInfos&amp;quot;: [
    {
      &amp;quot;classType&amp;quot;: &amp;quot;stream&amp;quot;,
      &amp;quot;className&amp;quot;: &amp;quot;oharastream.ohara.it.stream.DumbStream&amp;quot;,
      &amp;quot;settingDefinitions&amp;quot;: [
        {
          &amp;quot;blacklist&amp;quot;: [],
          &amp;quot;reference&amp;quot;: &amp;quot;BROKER_CLUSTER&amp;quot;,
          &amp;quot;displayName&amp;quot;: &amp;quot;Broker cluster key&amp;quot;,
          &amp;quot;regex&amp;quot;: null,
          &amp;quot;internal&amp;quot;: false,
          &amp;quot;permission&amp;quot;: &amp;quot;EDITABLE&amp;quot;,
          &amp;quot;documentation&amp;quot;: &amp;quot;the key of broker cluster used to transfer data for this stream&amp;quot;,
          &amp;quot;necessary&amp;quot;: &amp;quot;REQUIRED&amp;quot;,
          &amp;quot;valueType&amp;quot;: &amp;quot;OBJECT_KEY&amp;quot;,
          &amp;quot;tableKeys&amp;quot;: [],
          &amp;quot;orderInGroup&amp;quot;: 0,
          &amp;quot;key&amp;quot;: &amp;quot;brokerClusterKey&amp;quot;,
          &amp;quot;defaultValue&amp;quot;: null,
          &amp;quot;recommendedValues&amp;quot;: [],
          &amp;quot;group&amp;quot;: &amp;quot;core&amp;quot;
        }
      ]
    }
  ],
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;update-tags-of-file&#34;&gt;update tags of file&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/files/$name?group=default&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;tags&amp;quot;: {
    &amp;quot;a&amp;quot;: &amp;quot;b&amp;quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    it returns error code if input group/name are not associated to an
existent file.
  &lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;ohara-it-stream.jar&amp;quot;,
  &amp;quot;size&amp;quot;: 1896,
  &amp;quot;url&amp;quot;: &amp;quot;http://localhost:5000/v0/downloadFiles/default/ohara-it-stream.jar&amp;quot;,
  &amp;quot;lastModified&amp;quot;: 1578974415307,
  &amp;quot;tags&amp;quot;: {
    &amp;quot;a&amp;quot;: &amp;quot;b&amp;quot;
  },
  &amp;quot;classInfos&amp;quot;: [
    {
      &amp;quot;classType&amp;quot;: &amp;quot;stream&amp;quot;,
      &amp;quot;className&amp;quot;: &amp;quot;oharastream.ohara.it.stream.DumbStream&amp;quot;,
      &amp;quot;settingDefinitions&amp;quot;: [
        {
          &amp;quot;blacklist&amp;quot;: [],
          &amp;quot;reference&amp;quot;: &amp;quot;BROKER_CLUSTER&amp;quot;,
          &amp;quot;displayName&amp;quot;: &amp;quot;Broker cluster key&amp;quot;,
          &amp;quot;regex&amp;quot;: null,
          &amp;quot;internal&amp;quot;: false,
          &amp;quot;permission&amp;quot;: &amp;quot;EDITABLE&amp;quot;,
          &amp;quot;documentation&amp;quot;: &amp;quot;the key of broker cluster used to transfer data for this stream&amp;quot;,
          &amp;quot;necessary&amp;quot;: &amp;quot;REQUIRED&amp;quot;,
          &amp;quot;valueType&amp;quot;: &amp;quot;OBJECT_KEY&amp;quot;,
          &amp;quot;tableKeys&amp;quot;: [],
          &amp;quot;orderInGroup&amp;quot;: 0,
          &amp;quot;key&amp;quot;: &amp;quot;brokerClusterKey&amp;quot;,
          &amp;quot;defaultValue&amp;quot;: null,
          &amp;quot;recommendedValues&amp;quot;: [],
          &amp;quot;group&amp;quot;: &amp;quot;core&amp;quot;
        }
      ]
    }
  ],
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Inspect</title>
      <link>https://oharastream.github.io/en/docs/master/rest-api/inspect/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0100</pubDate>
      <guid>https://oharastream.github.io/en/docs/master/rest-api/inspect/</guid>
      <description>&lt;p&gt;Inspect APIs is a powerful tool that it enable you to &amp;ldquo;see&amp;rdquo; what in
the target via Configurator. For example, you can get the definitions
from specific image, or you can see what connectors or stream app in the
specific file.&lt;/p&gt;
&lt;h2 id=&#34;get-ohara-configurator-info&#34;&gt;get Ohara Configurator info&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/inspect/configurator&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;the format of response of Ohara Configurator is shown below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;versionInfo (&lt;strong&gt;object&lt;/strong&gt;) &amp;mdash; version details of Ohara Configurator
&lt;ul&gt;
&lt;li&gt;branch (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the branch name of Ohara Configurator&lt;/li&gt;
&lt;li&gt;version (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the release version of Ohara
Configurator&lt;/li&gt;
&lt;li&gt;revision (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; commit hash of Ohara Configurator. You
can trace the hash code via

&lt;a href=&#34;https://github.com/oharastream/ohara/commits/master&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;user (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the release manager of Ohara Configurator.&lt;/li&gt;
&lt;li&gt;date (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the date of releasing Ohara Configurator.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;mode (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the mode of this configurator. There are three
modes now:
&lt;ul&gt;
&lt;li&gt;K8S: k8s mode is for the production.&lt;/li&gt;
&lt;li&gt;SSH: ssh is useful to simple env.&lt;/li&gt;
&lt;li&gt;FAKE: fake mode is used to test APIs.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;versionInfo&amp;quot;: {
    &amp;quot;branch&amp;quot;: &amp;quot;0.10.0&amp;quot;,
    &amp;quot;revision&amp;quot;: &amp;quot;b303f3c2e52647ee5e79e55f9d74a5e51238a92c&amp;quot;,
    &amp;quot;version&amp;quot;: &amp;quot;0.11.0-SNAPSHOT&amp;quot;,
    &amp;quot;date&amp;quot;: &amp;quot;2020-01-08 06:05:47&amp;quot;,
    &amp;quot;user&amp;quot;: &amp;quot;root&amp;quot;
  },
  &amp;quot;mode&amp;quot;: &amp;quot;K8S&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;get-zookeeperbrokerworkerstream-info&#34;&gt;get zookeeper/broker/worker/stream info&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/inspect/$service&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This API used to fetch the definitions for specific cluster service. The
following fields are returned.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;imageName (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the image name of service&lt;/li&gt;
&lt;li&gt;settingDefinitions (&lt;strong&gt;array(object)&lt;/strong&gt;) &amp;mdash; the available settings
for this service (see 
&lt;a href=&#34;https://oharastream.github.io/en/docs/master/setting_definition/&#34;&gt;setting&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;the available variables for $service are shown below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;zookeeper&lt;/li&gt;
&lt;li&gt;broker&lt;/li&gt;
&lt;li&gt;worker&lt;/li&gt;
&lt;li&gt;stream&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;imageName&amp;quot;: &amp;quot;oharastream/zookeeper:0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;settingDefinitions&amp;quot;: [
    {
       &amp;quot;blacklist&amp;quot;: [],
       &amp;quot;reference&amp;quot;: &amp;quot;NONE&amp;quot;,
       &amp;quot;displayName&amp;quot;: &amp;quot;peerPort&amp;quot;,
       &amp;quot;regex&amp;quot;: null,
       &amp;quot;internal&amp;quot;: false,
       &amp;quot;permission&amp;quot;: &amp;quot;EDITABLE&amp;quot;,
       &amp;quot;documentation&amp;quot;: &amp;quot;the port exposed to each quorum&amp;quot;,
       &amp;quot;necessary&amp;quot;: &amp;quot;RANDOM_DEFAULT&amp;quot;,
       &amp;quot;valueType&amp;quot;: &amp;quot;BINDING_PORT&amp;quot;,
       &amp;quot;tableKeys&amp;quot;: [],
       &amp;quot;orderInGroup&amp;quot;: 10,
       &amp;quot;key&amp;quot;: &amp;quot;peerPort&amp;quot;,
       &amp;quot;defaultValue&amp;quot;: null,
       &amp;quot;recommendedValues&amp;quot;: [],
       &amp;quot;group&amp;quot;: &amp;quot;core&amp;quot;
    },
  ],
  &amp;quot;classInfos&amp;quot;: []
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;get-running-zookeeperbrokerworkerstream-info&#34;&gt;get running zookeeper/broker/worker/stream info&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/inspect/$service/$name?group=$group&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This API used to fetch the definitions for specific cluster service and
the definitions of available classes in the service. The following
fields are returned.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;imageName (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the image name of service&lt;/li&gt;
&lt;li&gt;settingDefinitions (&lt;strong&gt;array(object)&lt;/strong&gt;) &amp;mdash; the available settings
for this service (see 
&lt;a href=&#34;https://oharastream.github.io/en/docs/master/setting_definition/&#34;&gt;setting&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;classInfos (&lt;strong&gt;array(object)&lt;/strong&gt;) &amp;mdash; the information available classes
in this service
&lt;ul&gt;
&lt;li&gt;classInfos[i].className &amp;mdash; the name of this class&lt;/li&gt;
&lt;li&gt;classInfos[i].classType &amp;mdash; the type of this class. for example,
topic, source connector, sink connector or stream app&lt;/li&gt;
&lt;li&gt;classInfos[i].settingDefinitions &amp;mdash; the definitions of this
class&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;the available variables for $service are shown below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;zookeeper&lt;/li&gt;
&lt;li&gt;broker&lt;/li&gt;
&lt;li&gt;worker&lt;/li&gt;
&lt;li&gt;stream&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;imageName&amp;quot;: &amp;quot;oharastream/broker:0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;settingDefinitions&amp;quot;: [
    {
      &amp;quot;blacklist&amp;quot;: [],
      &amp;quot;reference&amp;quot;: &amp;quot;NONE&amp;quot;,
      &amp;quot;displayName&amp;quot;: &amp;quot;xmx&amp;quot;,
      &amp;quot;regex&amp;quot;: null,
      &amp;quot;internal&amp;quot;: false,
      &amp;quot;permission&amp;quot;: &amp;quot;EDITABLE&amp;quot;,
      &amp;quot;documentation&amp;quot;: &amp;quot;maximum memory allocation (in MB)&amp;quot;,
      &amp;quot;necessary&amp;quot;: &amp;quot;OPTIONAL_WITH_DEFAULT&amp;quot;,
      &amp;quot;valueType&amp;quot;: &amp;quot;POSITIVE_LONG&amp;quot;,
      &amp;quot;tableKeys&amp;quot;: [],
      &amp;quot;orderInGroup&amp;quot;: 8,
      &amp;quot;key&amp;quot;: &amp;quot;xmx&amp;quot;,
      &amp;quot;defaultValue&amp;quot;: 1024,
      &amp;quot;recommendedValues&amp;quot;: [],
      &amp;quot;group&amp;quot;: &amp;quot;core&amp;quot;
    }
  ],
  &amp;quot;classInfos&amp;quot;: [
    {
      &amp;quot;classType&amp;quot;: &amp;quot;topic&amp;quot;,
      &amp;quot;className&amp;quot;: &amp;quot;N/A&amp;quot;,
      &amp;quot;settingDefinitions&amp;quot;: [
        {
          &amp;quot;blacklist&amp;quot;: [],
          &amp;quot;reference&amp;quot;: &amp;quot;NONE&amp;quot;,
          &amp;quot;displayName&amp;quot;: &amp;quot;numberOfPartitions&amp;quot;,
          &amp;quot;regex&amp;quot;: null,
          &amp;quot;internal&amp;quot;: false,
          &amp;quot;permission&amp;quot;: &amp;quot;EDITABLE&amp;quot;,
          &amp;quot;documentation&amp;quot;: &amp;quot;the number of partitions&amp;quot;,
          &amp;quot;necessary&amp;quot;: &amp;quot;OPTIONAL_WITH_DEFAULT&amp;quot;,
          &amp;quot;valueType&amp;quot;: &amp;quot;POSITIVE_INT&amp;quot;,
          &amp;quot;tableKeys&amp;quot;: [],
          &amp;quot;orderInGroup&amp;quot;: 4,
          &amp;quot;key&amp;quot;: &amp;quot;numberOfPartitions&amp;quot;,
          &amp;quot;defaultValue&amp;quot;: 1,
          &amp;quot;recommendedValues&amp;quot;: [],
          &amp;quot;group&amp;quot;: &amp;quot;core&amp;quot;
        }
      ]
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;query-database&#34;&gt;Query Database&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;POST /v0/inspect/rdb&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This API returns the table details of a relational database. This API
invokes a running connector on worker cluster to fetch database
information and return to Ohara Configurator. You should deploy suitable
jdbc driver on worker cluster before using this API. Otherwise, you will
get a exception returned by Ohara Configurator. The query consists of
following fields.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;url (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; jdbc url&lt;/li&gt;
&lt;li&gt;user (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; user who can access target database&lt;/li&gt;
&lt;li&gt;password (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; password which can access target database&lt;/li&gt;
&lt;li&gt;workerClusterKey (&lt;strong&gt;Object&lt;/strong&gt;) &amp;mdash; target worker cluster.
&lt;ul&gt;
&lt;li&gt;workerClusterKey.group (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; the group of
cluster&lt;/li&gt;
&lt;li&gt;workerClusterKey.name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the name of cluster&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    the following forms are legal as well: (1) &lt;code&gt;{&amp;quot;name&amp;quot;: &amp;quot;n&amp;quot;}&lt;/code&gt;, (2) &lt;code&gt;&amp;quot;n&amp;quot;&lt;/code&gt;.
Both forms are converted to &lt;code&gt;{&amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;n&amp;quot;}&lt;/code&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;catalogPattern (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; filter returned tables
according to catalog&lt;/li&gt;
&lt;li&gt;schemaPattern (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; filter returned tables
according to schema&lt;/li&gt;
&lt;li&gt;tableName (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; filter returned tables according
to name&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Request&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;url&amp;quot;: &amp;quot;jdbc:postgresql://localhost:5432/postgres&amp;quot;,
  &amp;quot;user&amp;quot;: &amp;quot;ohara&amp;quot;,
  &amp;quot;password&amp;quot;: &amp;quot;123456&amp;quot;,
  &amp;quot;workerClusterKey&amp;quot;: &amp;quot;wk00&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; database name&lt;/li&gt;
&lt;li&gt;tables (&lt;strong&gt;array(object)&lt;/strong&gt;)
&lt;ul&gt;
&lt;li&gt;tables[i].catalogPattern (&lt;strong&gt;option(object)&lt;/strong&gt;) &amp;mdash; table&amp;rsquo;s
catalog pattern&lt;/li&gt;
&lt;li&gt;tables[i].schemaPattern (&lt;strong&gt;option(object)&lt;/strong&gt;) &amp;mdash; table&amp;rsquo;s
schema pattern&lt;/li&gt;
&lt;li&gt;tables[i].name (&lt;strong&gt;option(object)&lt;/strong&gt;) &amp;mdash; table&amp;rsquo;s name&lt;/li&gt;
&lt;li&gt;tables[i].columns (&lt;strong&gt;array(object)&lt;/strong&gt;) &amp;mdash; table&amp;rsquo;s columns
&lt;ul&gt;
&lt;li&gt;tables[i].columns[j].name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; column&amp;rsquo;s
columns&lt;/li&gt;
&lt;li&gt;tables[i].columns[j].dataType (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash;
column&amp;rsquo;s data type&lt;/li&gt;
&lt;li&gt;tables[i].columns[j].pk (&lt;strong&gt;boolean&lt;/strong&gt;) &amp;mdash; true if
this column is pk. otherwise false&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;postgresql&amp;quot;,
  &amp;quot;tables&amp;quot;: [
    {
      &amp;quot;schemaPattern&amp;quot;: &amp;quot;public&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;table1&amp;quot;,
      &amp;quot;columns&amp;quot;: [
        {
          &amp;quot;name&amp;quot;: &amp;quot;column1&amp;quot;,
          &amp;quot;dataType&amp;quot;: &amp;quot;timestamp&amp;quot;,
          &amp;quot;pk&amp;quot;: false
        },
        {
          &amp;quot;name&amp;quot;: &amp;quot;column2&amp;quot;,
          &amp;quot;dataType&amp;quot;: &amp;quot;varchar&amp;quot;,
          &amp;quot;pk&amp;quot;: true
        }
      ]
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;query-topic&#34;&gt;Query Topic&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;POST /v0/inspect/topic/$name?group=$group&amp;amp;timeout=$timeout&amp;amp;limit=$limit&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Fetch the latest data from a topic. the query arguments are shown below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;timeout (&lt;strong&gt;long&lt;/strong&gt;) &amp;mdash; break the fetch if this timeout is reached&lt;/li&gt;
&lt;li&gt;limit (&lt;strong&gt;long&lt;/strong&gt;) &amp;mdash; the number of messages in topic&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;the response includes following items.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;messages (&lt;strong&gt;Array(Object)&lt;/strong&gt;) &amp;mdash; messages&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;messages[i].partition (&lt;strong&gt;int&lt;/strong&gt;) &amp;mdash; the index of partition&lt;/li&gt;
&lt;li&gt;messages[i].offset (&lt;strong&gt;Long&lt;/strong&gt;) &amp;mdash; the offset of this message&lt;/li&gt;
&lt;li&gt;messages[i].sourceClass (&lt;strong&gt;Option(String)&lt;/strong&gt;) &amp;mdash; class name of
the component which generate this data&lt;/li&gt;
&lt;li&gt;messages[i].sourceKey (&lt;strong&gt;Option(Object)&lt;/strong&gt;) &amp;mdash; object key of the
component which generate this data&lt;/li&gt;
&lt;li&gt;messages[i].value (&lt;strong&gt;Option(Object)&lt;/strong&gt;) &amp;mdash; the value of this
message&lt;/li&gt;
&lt;li&gt;messages[i].error (&lt;strong&gt;Option(String)&lt;/strong&gt;) &amp;mdash; error message happen
in failing to parse value&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;messages&amp;quot;: [
    {
      &amp;quot;sourceKey&amp;quot;: {
        &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
        &amp;quot;name&amp;quot;: &amp;quot;perf&amp;quot;
      },
      &amp;quot;sourceClass&amp;quot;: &amp;quot;oharastream.ohara.connector.perf.PerfSourceTask&amp;quot;,
      &amp;quot;partition&amp;quot;: 0,
      &amp;quot;offset&amp;quot;: 0,
      &amp;quot;value&amp;quot;: {
        &amp;quot;a&amp;quot;: &amp;quot;c54e2f3477&amp;quot;,
        &amp;quot;b&amp;quot;: &amp;quot;32ae422fb5&amp;quot;,
        &amp;quot;c&amp;quot;: &amp;quot;53e448ab80&amp;quot;,
        &amp;quot;tags&amp;quot;: []
      }
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;query-file&#34;&gt;Query File&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the file name without extension&lt;/li&gt;
&lt;li&gt;group (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the group name (we use this field to separate
different workspaces)&lt;/li&gt;
&lt;li&gt;size (&lt;strong&gt;long&lt;/strong&gt;) &amp;mdash; file size&lt;/li&gt;
&lt;li&gt;tags (&lt;strong&gt;object&lt;/strong&gt;) &amp;mdash; the extra description to this object&lt;/li&gt;
&lt;li&gt;lastModified (&lt;strong&gt;long&lt;/strong&gt;) &amp;mdash; the time of uploading this file&lt;/li&gt;
&lt;li&gt;classInfos (&lt;strong&gt;array(object)&lt;/strong&gt;) &amp;mdash; the information of available
classes in this file&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;classInfos[i].className &amp;mdash; the name of this class&lt;/li&gt;
&lt;li&gt;classInfos[i].classType &amp;mdash; the type of this class. for example,
topic, source connector, sink connector or stream app&lt;/li&gt;
&lt;li&gt;classInfos[i].settingDefinitions &amp;mdash; the definitions of this
class&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;POST /v0/inspect/files&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Request&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-http&#34;&gt;Content-Type: multipart/form-data
file=&amp;quot;ohara-it-sink.jar&amp;quot;
group=&amp;quot;default&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;ohara-it-sink.jar&amp;quot;,
  &amp;quot;size&amp;quot;: 7902,
  &amp;quot;lastModified&amp;quot;: 1579055900202,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;classInfos&amp;quot;: [
    {
      &amp;quot;classType&amp;quot;: &amp;quot;sink&amp;quot;,
      &amp;quot;className&amp;quot;: &amp;quot;oharastream.ohara.it.connector.IncludeAllTypesSinkConnector&amp;quot;,
      &amp;quot;settingDefinitions&amp;quot;: [
        {
          &amp;quot;blacklist&amp;quot;: [],
          &amp;quot;reference&amp;quot;: &amp;quot;NONE&amp;quot;,
          &amp;quot;displayName&amp;quot;: &amp;quot;kind&amp;quot;,
          &amp;quot;regex&amp;quot;: null,
          &amp;quot;internal&amp;quot;: false,
          &amp;quot;permission&amp;quot;: &amp;quot;READ_ONLY&amp;quot;,
          &amp;quot;documentation&amp;quot;: &amp;quot;kind of connector&amp;quot;,
          &amp;quot;necessary&amp;quot;: &amp;quot;OPTIONAL_WITH_DEFAULT&amp;quot;,
          &amp;quot;valueType&amp;quot;: &amp;quot;STRING&amp;quot;,
          &amp;quot;tableKeys&amp;quot;: [],
          &amp;quot;orderInGroup&amp;quot;: 13,
          &amp;quot;key&amp;quot;: &amp;quot;kind&amp;quot;,
          &amp;quot;defaultValue&amp;quot;: &amp;quot;sink&amp;quot;,
          &amp;quot;recommendedValues&amp;quot;: [],
          &amp;quot;group&amp;quot;: &amp;quot;core&amp;quot;
        }
      ]
    }
  ],
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Logs</title>
      <link>https://oharastream.github.io/en/docs/master/rest-api/logs/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0100</pubDate>
      <guid>https://oharastream.github.io/en/docs/master/rest-api/logs/</guid>
      <description>&lt;p&gt;This world is beautiful but not safe. Even though Ohara shoulders the
blame for simplifying your life, there is a slim chance that something
don&amp;rsquo;t work well in Ohara. The Logs APIs, which are engineers&amp;rsquo; best
friend, open a door to observe the logs of running cluster.&lt;/p&gt;
&lt;p&gt;The available query parameters are shown below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;sinceSeconds (&lt;strong&gt;long&lt;/strong&gt;) &amp;mdash; show the logs since relative time&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It collects output from all containers&amp;rsquo; of a cluster and then format them
to JSON representation which has following elements.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;clusterKey (&lt;strong&gt;object&lt;/strong&gt;) &amp;mdash; cluster key
&lt;ul&gt;
&lt;li&gt;clusterKey.group (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; cluster group&lt;/li&gt;
&lt;li&gt;clusterKey.name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; cluster name&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;logs (&lt;strong&gt;array(object)&lt;/strong&gt;) &amp;mdash; log of each container
&lt;ul&gt;
&lt;li&gt;logs[i].hostname &amp;mdash; hostname&lt;/li&gt;
&lt;li&gt;logs[i].value &amp;mdash; total log of a container&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;get-the-log-of-a-running-cluster&#34;&gt;get the log of a running cluster&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/logs/$clusterType/$clusterName?group=$group&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;clusterType (&lt;strong&gt;string&lt;/strong&gt;)
&lt;ul&gt;
&lt;li&gt;zookeepers&lt;/li&gt;
&lt;li&gt;brokers&lt;/li&gt;
&lt;li&gt;workers&lt;/li&gt;
&lt;li&gt;streams&lt;/li&gt;
&lt;li&gt;shabondis&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;clusterKey&amp;quot;: {
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;zk&amp;quot;
  },
  &amp;quot;logs&amp;quot;: [
    {
      &amp;quot;hostname&amp;quot;: &amp;quot;node00&amp;quot;,
      &amp;quot;value&amp;quot;: &amp;quot;2020-01-14 10:15:42,146 [myid:] - INFO [main:QuorumPeerConfig@136&amp;quot;
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;get-the-since-seconds-log&#34;&gt;get the since seconds log&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/logs/$clusterType/$clusterName?group=$group&amp;amp;sinceSeconds=$relativeSeconds&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;clusterKey&amp;quot;: {
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;zk&amp;quot;
  },
  &amp;quot;logs&amp;quot;: [
    {
      &amp;quot;hostname&amp;quot;: &amp;quot;ohara-release-test-00&amp;quot;,
      &amp;quot;value&amp;quot;: &amp;quot;2020-01-15 02:00:43,090 [myid:] - INFO  [ProcessThread(sid:0 cport:2181)::PrepRequestProcessor@653] - Got user-level KeeperException when processing sessionid:0x100000761180000 type:setData cxid:0x11a zxid:0x9e txntype:-1 reqpath:n/a Error Path:/config/topics/default-topic0 Error:KeeperErrorCode = NoNode for /config/topics/default-topic0\n&amp;quot;
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;get-the-log-of-configurator&#34;&gt;get the log of Configurator&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/logs/configurator&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;clusterKey&amp;quot;: {
    &amp;quot;group&amp;quot;: &amp;quot;N/A&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;node00&amp;quot;
  },
  &amp;quot;logs&amp;quot;: [
    {
      &amp;quot;hostname&amp;quot;: &amp;quot;node00&amp;quot;,
      &amp;quot;value&amp;quot;: &amp;quot;2020-01-10 09:43:02,669 INFO  [main] configurator.Configurator$(391): start a configurator built on hostname:ohara-release-test-00 and port:5000\n2020-01-10 09:43:02,676 INFO  [main] configurator.Configurator$(393): enter ctrl+c to terminate the configurator&amp;quot;
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    the Configurator MUST run on docker container and the node hosting
Configurator MUST be added to Configurator via
&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/nodes/&#34;&gt;Node APIs&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Node</title>
      <link>https://oharastream.github.io/en/docs/master/rest-api/nodes/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0100</pubDate>
      <guid>https://oharastream.github.io/en/docs/master/rest-api/nodes/</guid>
      <description>&lt;p&gt;Node is the basic unit of running service. It can be either physical
machine or vm. In section

&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/zookeepers/&#34;&gt;zookeeper&lt;/a&gt;,

&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/brokers/&#34;&gt;Broker&lt;/a&gt; and

&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/workers/&#34;&gt;Worker&lt;/a&gt;, you will see many
requests demanding you to fill the node name to build the services.
Currently, Ohara requires the node added to Ohara should pre-install
following services.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;docker (18.09+)&lt;/li&gt;
&lt;li&gt;ssh server&lt;/li&gt;
&lt;li&gt;k8s (only if you want to k8s to host containers)&lt;/li&gt;
&lt;li&gt;official Ohara images
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://cloud.docker.com/u/oharastream/repository/docker/oharastream/zookeeper&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;oharastream/zookeeper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://cloud.docker.com/u/oharastream/repository/docker/oharastream/broker&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;oharastream/broker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://cloud.docker.com/u/oharastream/repository/docker/oharastream/connect-worker&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;oharastream/connect-worker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://cloud.docker.com/u/oharastream/repository/docker/oharastream/stream&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;oharastream/stream&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The version (tag) depends on which Ohara you used. It would be better to
use the same version to Ohara. For example, the version of Ohara
configurator you are running is 0.11.0-SNAPSHOT, then the official images you should
download is &lt;code&gt;oharastream/xxxx:0.11.0-SNAPSHOT&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The properties used by describing a node are shown below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;hostname (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; hostname of node. The legal character is
number, lowercase alphanumeric characters, or &amp;lsquo;.&amp;rsquo;&lt;/p&gt;
&lt;p&gt;This hostname must be available on you DNS. It will cause a lot of
troubles if Ohara Configurator is unable to connect to remote node
via this hostname.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;port (&lt;strong&gt;int&lt;/strong&gt;) &amp;mdash; ssh port of node&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;user (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; ssh account&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;password (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; ssh password&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;tags (&lt;strong&gt;object&lt;/strong&gt;) &amp;mdash; the extra description to this object&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following information are updated at run-time.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;services (&lt;strong&gt;array(object)&lt;/strong&gt;) &amp;mdash; the services hosted by this node
&lt;ul&gt;
&lt;li&gt;services[i].name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; service name (configurator,
zookeeper, broker, connect-worker and stream)&lt;/li&gt;
&lt;li&gt;services[i].clusterKeys (&lt;strong&gt;array(object)&lt;/strong&gt;) &amp;mdash; the keys of
this service&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;resources (&lt;strong&gt;array(object)&lt;/strong&gt;) &amp;mdash; the available resources of this
node
&lt;ul&gt;
&lt;li&gt;resources[i].name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the resource name&lt;/li&gt;
&lt;li&gt;resources[i].value (&lt;strong&gt;number&lt;/strong&gt;) &amp;mdash; the &amp;ldquo;pure&amp;rdquo; number of
resource&lt;/li&gt;
&lt;li&gt;resources[i].used (&lt;strong&gt;option(double)&lt;/strong&gt;) &amp;mdash; the used &amp;ldquo;value&amp;rdquo;
in percentage. Noted: this value may be null if the impl is
unable to calculate the used resource.&lt;/li&gt;
&lt;li&gt;resources[i].unit (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the description of the
&amp;ldquo;value&amp;rdquo; unit&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;state (&lt;strong&gt;String&lt;/strong&gt;) &amp;mdash; &amp;ldquo;available&amp;rdquo; means this node works well.
otherwise, &amp;ldquo;unavailable&amp;rdquo; is returned&lt;/li&gt;
&lt;li&gt;error (&lt;strong&gt;option(String)&lt;/strong&gt;) &amp;mdash; the description to the unavailable
node&lt;/li&gt;
&lt;li&gt;lastModified (&lt;strong&gt;long&lt;/strong&gt;) &amp;mdash; the last time to update this node&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;store-a-node&#34;&gt;store a node&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;POST /v0/nodes&lt;/em&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;hostname (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; hostname of node&lt;/li&gt;
&lt;li&gt;port (&lt;strong&gt;int&lt;/strong&gt;) &amp;mdash; ssh port of node&lt;/li&gt;
&lt;li&gt;user (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; ssh account&lt;/li&gt;
&lt;li&gt;password (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; ssh password&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Request&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;hostname&amp;quot;: &amp;quot;node00&amp;quot;,
  &amp;quot;port&amp;quot;: 22,
  &amp;quot;user&amp;quot;: &amp;quot;abc&amp;quot;,
  &amp;quot;password&amp;quot;: &amp;quot;pwd&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;services&amp;quot;: [
    {
      &amp;quot;name&amp;quot;: &amp;quot;zookeeper&amp;quot;,
      &amp;quot;clusterKeys&amp;quot;: []
    },
    {
      &amp;quot;name&amp;quot;: &amp;quot;broker&amp;quot;,
      &amp;quot;clusterKeys&amp;quot;: []
    },
    {
      &amp;quot;name&amp;quot;: &amp;quot;connect-worker&amp;quot;,
      &amp;quot;clusterKeys&amp;quot;: []
    },
    {
      &amp;quot;name&amp;quot;: &amp;quot;stream&amp;quot;,
      &amp;quot;clusterKeys&amp;quot;: []
    },
    {
      &amp;quot;name&amp;quot;: &amp;quot;configurator&amp;quot;,
      &amp;quot;clusterKeys&amp;quot;: [
        {
            &amp;quot;group&amp;quot;: &amp;quot;N/A&amp;quot;,
            &amp;quot;name&amp;quot;: &amp;quot;node00&amp;quot;
        }
      ]
    }
  ],
  &amp;quot;hostname&amp;quot;: &amp;quot;node00&amp;quot;,
  &amp;quot;state&amp;quot;: &amp;quot;AVAILABLE&amp;quot;,
  &amp;quot;lastModified&amp;quot;: 1578627668686,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;port&amp;quot;: 22,
  &amp;quot;resources&amp;quot;: [
    {
      &amp;quot;name&amp;quot;: &amp;quot;CPU&amp;quot;,
      &amp;quot;value&amp;quot;: 6.0,
      &amp;quot;unit&amp;quot;: &amp;quot;cores&amp;quot;
    },
    {
      &amp;quot;name&amp;quot;: &amp;quot;Memory&amp;quot;,
      &amp;quot;value&amp;quot;: 10.496479034423828,
      &amp;quot;unit&amp;quot;: &amp;quot;GB&amp;quot;
    }
  ],
  &amp;quot;user&amp;quot;: &amp;quot;abc&amp;quot;,
  &amp;quot;password&amp;quot;: &amp;quot;pwd&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;update-a-node&#34;&gt;update a node&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/nodes/${name}&lt;/em&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;hostname (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; hostname of node&lt;/li&gt;
&lt;li&gt;port (&lt;strong&gt;int&lt;/strong&gt;) &amp;mdash; ssh port of node&lt;/li&gt;
&lt;li&gt;user (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; ssh account&lt;/li&gt;
&lt;li&gt;password (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; ssh password&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Example Request
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;port&amp;quot;: 9999
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    An new node will be created if your input name does not exist
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    the update request will clear the validation report attached to this
node
  &lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;services&amp;quot;: [
    {
      &amp;quot;name&amp;quot;: &amp;quot;zookeeper&amp;quot;,
      &amp;quot;clusterKeys&amp;quot;: []
    },
    {
      &amp;quot;name&amp;quot;: &amp;quot;broker&amp;quot;,
      &amp;quot;clusterKeys&amp;quot;: []
    },
    {
      &amp;quot;name&amp;quot;: &amp;quot;connect-worker&amp;quot;,
      &amp;quot;clusterKeys&amp;quot;: []
    },
    {
      &amp;quot;name&amp;quot;: &amp;quot;stream&amp;quot;,
      &amp;quot;clusterKeys&amp;quot;: []
    },
    {
      &amp;quot;name&amp;quot;: &amp;quot;configurator&amp;quot;,
      &amp;quot;clusterKeys&amp;quot;: [
        {
            &amp;quot;group&amp;quot;: &amp;quot;N/A&amp;quot;,
            &amp;quot;name&amp;quot;: &amp;quot;node00&amp;quot;
        }
      ]
    }
  ],
  &amp;quot;hostname&amp;quot;: &amp;quot;node00&amp;quot;,
  &amp;quot;state&amp;quot;: &amp;quot;AVAILABLE&amp;quot;,
  &amp;quot;lastModified&amp;quot;: 1578627668686,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;port&amp;quot;: 9999,
  &amp;quot;resources&amp;quot;: [
    {
      &amp;quot;name&amp;quot;: &amp;quot;CPU&amp;quot;,
      &amp;quot;value&amp;quot;: 6.0,
      &amp;quot;unit&amp;quot;: &amp;quot;cores&amp;quot;
    },
    {
      &amp;quot;name&amp;quot;: &amp;quot;Memory&amp;quot;,
      &amp;quot;value&amp;quot;: 10.496479034423828,
      &amp;quot;unit&amp;quot;: &amp;quot;GB&amp;quot;
    }
  ],
  &amp;quot;user&amp;quot;: &amp;quot;abc&amp;quot;,
  &amp;quot;password&amp;quot;: &amp;quot;pwd&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;list-all-nodes-stored-in-ohara&#34;&gt;list all nodes stored in Ohara&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/nodes&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
  {
    &amp;quot;services&amp;quot;: [
      {
        &amp;quot;name&amp;quot;: &amp;quot;zookeeper&amp;quot;,
        &amp;quot;clusterKeys&amp;quot;: []
      },
      {
        &amp;quot;name&amp;quot;: &amp;quot;broker&amp;quot;,
        &amp;quot;clusterKeys&amp;quot;: []
      },
      {
        &amp;quot;name&amp;quot;: &amp;quot;connect-worker&amp;quot;,
        &amp;quot;clusterKeys&amp;quot;: []
      },
      {
        &amp;quot;name&amp;quot;: &amp;quot;stream&amp;quot;,
        &amp;quot;clusterKeys&amp;quot;: []
      },
      {
        &amp;quot;name&amp;quot;: &amp;quot;configurator&amp;quot;,
        &amp;quot;clusterKeys&amp;quot;: [
          {
              &amp;quot;group&amp;quot;: &amp;quot;N/A&amp;quot;,
              &amp;quot;name&amp;quot;: &amp;quot;node00&amp;quot;
          }
        ]
      }
    ],
    &amp;quot;hostname&amp;quot;: &amp;quot;node00&amp;quot;,
    &amp;quot;state&amp;quot;: &amp;quot;AVAILABLE&amp;quot;,
    &amp;quot;lastModified&amp;quot;: 1578627668686,
    &amp;quot;tags&amp;quot;: {},
    &amp;quot;port&amp;quot;: 22,
    &amp;quot;resources&amp;quot;: [
      {
        &amp;quot;name&amp;quot;: &amp;quot;CPU&amp;quot;,
        &amp;quot;value&amp;quot;: 6.0,
        &amp;quot;unit&amp;quot;: &amp;quot;cores&amp;quot;
      },
      {
        &amp;quot;name&amp;quot;: &amp;quot;Memory&amp;quot;,
        &amp;quot;value&amp;quot;: 10.496479034423828,
        &amp;quot;unit&amp;quot;: &amp;quot;GB&amp;quot;
      }
    ],
    &amp;quot;user&amp;quot;: &amp;quot;abc&amp;quot;,
    &amp;quot;password&amp;quot;: &amp;quot;pwd&amp;quot;
  }
]
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;delete-a-node&#34;&gt;delete a node&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;DELETE /v0/nodes/${name}&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code&gt;204 NoContent
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    It is ok to delete a nonexistent pipeline, and the response is
204 NoContent. However, it is disallowed to remove a node which is
running service. If you do want to delete the node from Ohara,
please stop all services from the node.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;get-a-node&#34;&gt;get a node&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/nodes/${name}&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;services&amp;quot;: [
    {
      &amp;quot;name&amp;quot;: &amp;quot;zookeeper&amp;quot;,
      &amp;quot;clusterKeys&amp;quot;: []
    },
    {
      &amp;quot;name&amp;quot;: &amp;quot;broker&amp;quot;,
      &amp;quot;clusterKeys&amp;quot;: []
    },
    {
      &amp;quot;name&amp;quot;: &amp;quot;connect-worker&amp;quot;,
      &amp;quot;clusterKeys&amp;quot;: []
    },
    {
      &amp;quot;name&amp;quot;: &amp;quot;stream&amp;quot;,
      &amp;quot;clusterKeys&amp;quot;: []
    },
    {
      &amp;quot;name&amp;quot;: &amp;quot;configurator&amp;quot;,
      &amp;quot;clusterKeys&amp;quot;: [
        {
            &amp;quot;group&amp;quot;: &amp;quot;N/A&amp;quot;,
            &amp;quot;name&amp;quot;: &amp;quot;node00&amp;quot;
        }
      ]
    }
  ],
  &amp;quot;hostname&amp;quot;: &amp;quot;node00&amp;quot;,
  &amp;quot;state&amp;quot;: &amp;quot;AVAILABLE&amp;quot;,
  &amp;quot;lastModified&amp;quot;: 1578627668686,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;port&amp;quot;: 22,
  &amp;quot;resources&amp;quot;: [
    {
      &amp;quot;name&amp;quot;: &amp;quot;CPU&amp;quot;,
      &amp;quot;value&amp;quot;: 6.0,
      &amp;quot;unit&amp;quot;: &amp;quot;cores&amp;quot;
    },
    {
      &amp;quot;name&amp;quot;: &amp;quot;Memory&amp;quot;,
      &amp;quot;value&amp;quot;: 10.496479034423828,
      &amp;quot;unit&amp;quot;: &amp;quot;GB&amp;quot;
    }
  ],
  &amp;quot;user&amp;quot;: &amp;quot;abc&amp;quot;,
  &amp;quot;password&amp;quot;: &amp;quot;pwd&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Object</title>
      <link>https://oharastream.github.io/en/docs/master/rest-api/objects/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0100</pubDate>
      <guid>https://oharastream.github.io/en/docs/master/rest-api/objects/</guid>
      <description>&lt;p&gt;Object APIs offer a way to store anything to Configurator. It is useful
when you have something temporary and you have no other way to store
them.&lt;/p&gt;
&lt;p&gt;Similar to other APIs, the required fields are &amp;ldquo;name&amp;rdquo; and &amp;ldquo;group&amp;rdquo;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; name of object. The legal character is number,
lowercase alphanumeric characters, or &amp;lsquo;.&amp;rsquo;&lt;/li&gt;
&lt;li&gt;group (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; group of object. The legal character is
number, lowercase alphanumeric characters, or &amp;lsquo;.&amp;rsquo;&lt;/li&gt;
&lt;li&gt;tags (&lt;strong&gt;option(object)&lt;/strong&gt;) &amp;mdash; the extra description to this object&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following information are updated at run-time.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;lastModified (&lt;strong&gt;long&lt;/strong&gt;) &amp;mdash; the last time to update this node&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;store-a-object&#34;&gt;store a object&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;POST /v0/objects&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Request&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;n0&amp;quot;,
  &amp;quot;k&amp;quot;: &amp;quot;v&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;n0&amp;quot;,
  &amp;quot;lastModified&amp;quot;: 1579071742763,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;k&amp;quot;: &amp;quot;v&amp;quot;,
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;update-a-object&#34;&gt;update a object&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/objects/${name}&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Request&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;k0&amp;quot;: &amp;quot;v0&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;n0&amp;quot;,
  &amp;quot;k0&amp;quot;: &amp;quot;v0&amp;quot;,
  &amp;quot;lastModified&amp;quot;: 1579072298657,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;k&amp;quot;: &amp;quot;v&amp;quot;,
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;list-all-objects&#34;&gt;list all objects&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/objects&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
  {
    &amp;quot;name&amp;quot;: &amp;quot;n0&amp;quot;,
    &amp;quot;k0&amp;quot;: &amp;quot;v1000000&amp;quot;,
    &amp;quot;lastModified&amp;quot;: 1579072345437,
    &amp;quot;tags&amp;quot;: {},
    &amp;quot;k&amp;quot;: &amp;quot;v&amp;quot;,
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;
  }
]
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;delete-a-node&#34;&gt;delete a node&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;DELETE /v0/objects/${name}&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code&gt;204 NoContent
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;get-a-object&#34;&gt;get a object&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/objects/${name}&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;n0&amp;quot;,
  &amp;quot;k0&amp;quot;: &amp;quot;v0&amp;quot;,
  &amp;quot;lastModified&amp;quot;: 1579072345437,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;k&amp;quot;: &amp;quot;v&amp;quot;,
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Pipeline</title>
      <link>https://oharastream.github.io/en/docs/master/rest-api/pipelines/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0100</pubDate>
      <guid>https://oharastream.github.io/en/docs/master/rest-api/pipelines/</guid>
      <description>&lt;p&gt;Pipeline APIs are born of Ohara manager which needs a way to store the
relationship of components in streaming. The relationship in pipeline is
made up of multi &lt;strong&gt;endpoints&lt;/strong&gt;. Each &lt;strong&gt;endpoint&lt;/strong&gt; describe a component.
For example, you have a 
&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/topics/&#34;&gt;topic&lt;/a&gt;
as source so you can describe the relationship via following
endpoints.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;endpoints&amp;quot;: [
    {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;topic0&amp;quot;,
      &amp;quot;kind&amp;quot;: &amp;quot;topic&amp;quot;
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The objects grouped by pipeline should be existent. Otherwise, pipeline
will ignore them in generating object abstracts.&lt;/p&gt;
&lt;p&gt;The objects grouped by pipeline don&amp;rsquo;t need to located on the same
cluster hierarchy. Grouping a topic, which is placed at broker_0, and a
topic, which is located at broker_1, is valid. However, the object
based on a dead cluster will get an abstract with error state.&lt;/p&gt;
&lt;p&gt;The properties used in generating pipeline are shown below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;group (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; pipeline&amp;rsquo;s group. The legal character is
number, lowercase alphanumeric characters, or &amp;lsquo;.&amp;rsquo;&lt;/li&gt;
&lt;li&gt;name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; pipeline&amp;rsquo;s name. The legal character is
number, lowercase alphanumeric characters, or &amp;lsquo;.&amp;rsquo;&lt;/li&gt;
&lt;li&gt;endpoints (&lt;strong&gt;array(object)&lt;/strong&gt;) &amp;mdash; the relationship between objects
&lt;ul&gt;
&lt;li&gt;endpoints[i].group (&lt;strong&gt;String&lt;/strong&gt;) &amp;mdash; the group of this endpoint&lt;/li&gt;
&lt;li&gt;endpoints[i].name (&lt;strong&gt;String&lt;/strong&gt;) &amp;mdash; the name of this endpoint&lt;/li&gt;
&lt;li&gt;endpoints[i].kind (&lt;strong&gt;String&lt;/strong&gt;) &amp;mdash; the kind of this endpoint&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;tags (&lt;strong&gt;object&lt;/strong&gt;) &amp;mdash; the extra description to this object&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Following information are written by Ohara.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;lastModified (&lt;strong&gt;long&lt;/strong&gt;) &amp;mdash; the last time to update this pipeline&lt;/li&gt;
&lt;li&gt;objects (&lt;strong&gt;array(object)&lt;/strong&gt;) &amp;mdash; the abstract of all objects
mentioned by pipeline
&lt;ul&gt;
&lt;li&gt;objects[i].name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; object&amp;rsquo;s name&lt;/li&gt;
&lt;li&gt;objects[i].kind (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the type of this object. for
instance, 
&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/topics/&#34;&gt;topic&lt;/a&gt;,

&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/connectors/&#34;&gt;connector&lt;/a&gt;, and

&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/streams/&#34;&gt;stream&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;objects[i].className (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; object&amp;rsquo;s implementation.
Normally, it shows the full name of a java class&lt;/li&gt;
&lt;li&gt;objects[i].state (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; the state of object.
If the object can&amp;rsquo;t have state (eg, 
&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/topics/&#34;&gt;topic&lt;/a&gt;),
you won&amp;rsquo;t see this field&lt;/li&gt;
&lt;li&gt;objects[i].error (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; the error message of
this object&lt;/li&gt;
&lt;li&gt;objects[i].lastModified (&lt;strong&gt;long&lt;/strong&gt;) &amp;mdash; the last time to update
this object&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://oharastream.github.io/en/docs/master/custom_connector/#metrics&#34;&gt;nodeMetrics&lt;/a&gt; (&lt;strong&gt;object&lt;/strong&gt;) &amp;mdash;
the metrics from this object. Not all objects in pipeline have metrics!&lt;/li&gt;
&lt;li&gt;meters (&lt;strong&gt;array(object)&lt;/strong&gt;) &amp;mdash; the metrics in meter type&lt;/li&gt;
&lt;li&gt;meters[i].value (&lt;strong&gt;double&lt;/strong&gt;) &amp;mdash; the number stored in meter&lt;/li&gt;
&lt;li&gt;meters[i].unit (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; unit for value&lt;/li&gt;
&lt;li&gt;meters[i].document (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; document of this meter&lt;/li&gt;
&lt;li&gt;meters[i].queryTime (&lt;strong&gt;long&lt;/strong&gt;) &amp;mdash; the time of query metrics
from remote machine&lt;/li&gt;
&lt;li&gt;meters[i].startTime (&lt;strong&gt;option(long)&lt;/strong&gt;) &amp;mdash; the time of record
generated in remote machine&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;jarKeys (&lt;strong&gt;array(object)&lt;/strong&gt;) &amp;mdash; the jars used by the objects in
pipeline.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;create-a-pipeline&#34;&gt;create a pipeline&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;POST /v0/pipelines&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The following example creates a pipeline with a

&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/topics/&#34;&gt;topic&lt;/a&gt; and 
&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/connectors/&#34;&gt;connector&lt;/a&gt;.
The 
&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/topics/&#34;&gt;topic&lt;/a&gt; is created on 
&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/brokers/&#34;&gt;broker cluster&lt;/a&gt;
but the 
&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/connectors/&#34;&gt;connector&lt;/a&gt; isn&amp;rsquo;t.
Hence, the response from server shows that it fails to find the status
of the 
&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/connectors/&#34;&gt;connector&lt;/a&gt;. That
is to say, it is ok to add un-running 
&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/connectors/&#34;&gt;connector&lt;/a&gt; to pipeline.&lt;/p&gt;
&lt;p&gt;Allow setting the not exists object for the endpoint. The object
resposne value is empty.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Request 1 - Running single topic example&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;pipeline0&amp;quot;,
  &amp;quot;endpoints&amp;quot;: [
    {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;topic0&amp;quot;,
      &amp;quot;kind&amp;quot;: &amp;quot;topic&amp;quot;
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example Response 1&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;pipeline0&amp;quot;,
  &amp;quot;lastModified&amp;quot;: 1578639344607,
  &amp;quot;endpoints&amp;quot;: [
    {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;topic0&amp;quot;,
      &amp;quot;kind&amp;quot;: &amp;quot;topic&amp;quot;
    }
  ],
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;objects&amp;quot;: [
    {
      &amp;quot;name&amp;quot;: &amp;quot;topic0&amp;quot;,
      &amp;quot;state&amp;quot;: &amp;quot;RUNNING&amp;quot;,
      &amp;quot;lastModified&amp;quot;: 1578635914746,
      &amp;quot;tags&amp;quot;: {},
      &amp;quot;nodeMetrics&amp;quot;: [],
      &amp;quot;kind&amp;quot;: &amp;quot;topic&amp;quot;,
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;
    }
  ],
  &amp;quot;jarKeys&amp;quot;: [],
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example Request 2 - Running topic and perf connector example&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;pipeline1&amp;quot;,
  &amp;quot;endpoints&amp;quot;: [
    {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;topic0&amp;quot;,
      &amp;quot;kind&amp;quot;: &amp;quot;topic&amp;quot;
    },
    {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;perf&amp;quot;,
      &amp;quot;kind&amp;quot;: &amp;quot;connector&amp;quot;
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example Response 2&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;pipeline1&amp;quot;,
  &amp;quot;lastModified&amp;quot;: 1578649709850,
  &amp;quot;endpoints&amp;quot;: [
    {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;topic0&amp;quot;,
      &amp;quot;kind&amp;quot;: &amp;quot;topic&amp;quot;
    },
    {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;perf&amp;quot;,
      &amp;quot;kind&amp;quot;: &amp;quot;connector&amp;quot;
    }
  ],
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;objects&amp;quot;: [
    {
      &amp;quot;name&amp;quot;: &amp;quot;topic0&amp;quot;,
      &amp;quot;state&amp;quot;: &amp;quot;RUNNING&amp;quot;,
      &amp;quot;lastModified&amp;quot;: 1578649564486,
      &amp;quot;tags&amp;quot;: {},
      &amp;quot;nodeMetrics&amp;quot;: [],
      &amp;quot;kind&amp;quot;: &amp;quot;topic&amp;quot;,
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;
    },
    {
      &amp;quot;name&amp;quot;: &amp;quot;perf&amp;quot;,
      &amp;quot;state&amp;quot;: &amp;quot;RUNNING&amp;quot;,
      &amp;quot;lastModified&amp;quot;: 1578649620960,
      &amp;quot;tags&amp;quot;: {},
      &amp;quot;className&amp;quot;: &amp;quot;oharastream.ohara.connector.perf.PerfSource&amp;quot;,
      &amp;quot;nodeMetrics&amp;quot;: [],
      &amp;quot;kind&amp;quot;: &amp;quot;source&amp;quot;,
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;
    }
  ],
  &amp;quot;jarKeys&amp;quot;: [],
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;update-a-pipeline&#34;&gt;update a pipeline&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/pipelines/$name&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Request
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;endpoints&amp;quot;: [
    {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;topic1&amp;quot;,
      &amp;quot;kind&amp;quot;: &amp;quot;topic&amp;quot;
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    This API creates a new pipeline for you if the input name does not exist!
  &lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;pipeline0&amp;quot;,
  &amp;quot;lastModified&amp;quot;: 1578641282237,
  &amp;quot;endpoints&amp;quot;: [
    {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;topic1&amp;quot;,
      &amp;quot;kind&amp;quot;: &amp;quot;topic&amp;quot;
    }
  ],
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;objects&amp;quot;: [
    {
      &amp;quot;name&amp;quot;: &amp;quot;topic1&amp;quot;,
      &amp;quot;state&amp;quot;: &amp;quot;RUNNING&amp;quot;,
      &amp;quot;lastModified&amp;quot;: 1578641231579,
      &amp;quot;tags&amp;quot;: {},
      &amp;quot;nodeMetrics&amp;quot;: [],
      &amp;quot;kind&amp;quot;: &amp;quot;topic&amp;quot;,
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;
    }
  ],
  &amp;quot;jarKeys&amp;quot;: [],
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;list-all-pipelines&#34;&gt;list all pipelines&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/pipelines&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Listing all pipelines is a expensive operation as it invokes a iteration
to all objects stored in pipeline. The loop will do a lot of checks and
fetch status, metrics and log from backend clusters. If you have the
name of pipeline, please use 
&lt;a href=&#34;#get&#34;&gt;GET&lt;/a&gt; to fetch
details of &lt;strong&gt;single&lt;/strong&gt; pipeline.&lt;/p&gt;
&lt;p&gt;the accepted query keys are listed below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;group&lt;/li&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;li&gt;jarKeys&lt;/li&gt;
&lt;li&gt;lastModified&lt;/li&gt;
&lt;li&gt;tags&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
  {
    &amp;quot;name&amp;quot;: &amp;quot;pipeline0&amp;quot;,
    &amp;quot;lastModified&amp;quot;: 1578641282237,
    &amp;quot;endpoints&amp;quot;: [
      {
        &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
        &amp;quot;name&amp;quot;: &amp;quot;topic1&amp;quot;,
        &amp;quot;kind&amp;quot;: &amp;quot;topic&amp;quot;
      }
    ],
    &amp;quot;tags&amp;quot;: {},
    &amp;quot;objects&amp;quot;: [
      {
        &amp;quot;name&amp;quot;: &amp;quot;topic1&amp;quot;,
        &amp;quot;state&amp;quot;: &amp;quot;RUNNING&amp;quot;,
        &amp;quot;lastModified&amp;quot;: 1578641231579,
        &amp;quot;tags&amp;quot;: {},
        &amp;quot;nodeMetrics&amp;quot;: [],
        &amp;quot;kind&amp;quot;: &amp;quot;topic&amp;quot;,
          &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;
        }
    ],
    &amp;quot;jarKeys&amp;quot;: [],
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;
  }
]
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;GET /v0/pipelines?name=${pipelineName}&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
  {
    &amp;quot;name&amp;quot;: &amp;quot;pipeline0&amp;quot;,
    &amp;quot;lastModified&amp;quot;: 1578647223700,
    &amp;quot;endpoints&amp;quot;: [
      {
        &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
        &amp;quot;name&amp;quot;: &amp;quot;topic1&amp;quot;,
        &amp;quot;kind&amp;quot;: &amp;quot;topic&amp;quot;
      }
    ],
    &amp;quot;tags&amp;quot;: {},
    &amp;quot;objects&amp;quot;: [],
    &amp;quot;jarKeys&amp;quot;: [],
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;
  }
]
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;delete-a-pipeline&#34;&gt;delete a pipeline&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;DELETE /v0/pipelines/$name&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Deleting a pipeline does not delete the objects related to the pipeline.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code&gt;204 NoContent
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    It is ok to delete a nonexistent pipeline, and the response is
204 NoContent. However, it is illegal to remove a pipeline having
any running objects
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;get&#34;&gt;get a pipeline&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/pipelines/$name&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;pipeline0&amp;quot;,
  &amp;quot;lastModified&amp;quot;: 1578647223700,
  &amp;quot;endpoints&amp;quot;: [
    {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;topic1&amp;quot;,
      &amp;quot;kind&amp;quot;: &amp;quot;topic&amp;quot;
    }
  ],
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;objects&amp;quot;: [],
  &amp;quot;jarKeys&amp;quot;: [],
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    The field &amp;ldquo;objects&amp;rdquo; displays only existent endpoints.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;refresh-a-pipeline&#34;&gt;refresh a pipeline&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/pipelines/$name/refresh&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Requires Ohara Configurator to cleanup nonexistent objects of pipeline.
Pipeline is a group of objects and it contains, sometimes, some
nonexistent objects. Those nonexistent objects won&amp;rsquo;t hurt our services
but it may be ugly and weird to read. Hence, the (helper) API do a
background cleanup for your pipeline. The cleanup rules are shown below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;the endpoint having nonexistent &amp;ldquo;from&amp;rdquo; is removed&lt;/li&gt;
&lt;li&gt;the objects in &amp;ldquo;to&amp;rdquo; get removed&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-http&#34;&gt;202 Accepted
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    You should use &lt;a href=&#34;#get&#34;&gt;Get pipeline&lt;/a&gt; to fetch up-to-date status
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Shabondi</title>
      <link>https://oharastream.github.io/en/docs/master/rest-api/shabondis/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0100</pubDate>
      <guid>https://oharastream.github.io/en/docs/master/rest-api/shabondis/</guid>
      <description>&lt;p&gt;Shabondi service play the role of a http proxy service in the Pipeline.
Just like connector, there have two kinds of Shabondi service:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Source: &lt;strong&gt;Shabondi source service&lt;/strong&gt; receives data from http request
and then writes the data into the linked topic.&lt;/li&gt;
&lt;li&gt;Sink: Users can use http request to read topic data through
&lt;strong&gt;Shabondi sink service&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following are common setting both Shabondi source and sink:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the value of group is always &amp;ldquo;default&amp;rdquo;. The
legal character is number, lowercase alphanumeric characters, or &lt;code&gt;.&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;group (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the name of this connector. The legal
character is number, lowercase alphanumeric characters, or &lt;code&gt;.&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;brokerClusterKey (&lt;strong&gt;object&lt;/strong&gt;) &amp;mdash; the broker cluster used to store
data generated by this worker cluster
&lt;ul&gt;
&lt;li&gt;brokerClusterKey.group (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; the group of
cluster&lt;/li&gt;
&lt;li&gt;brokerClusterKey.name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the name of cluster&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    the following forms are legal as well: (1) &lt;code&gt;{&amp;quot;name&amp;quot;: &amp;quot;n&amp;quot;}&lt;/code&gt;, (2) &lt;code&gt;&amp;quot;n&amp;quot;&lt;/code&gt;.
Both forms are converted to &lt;code&gt;{&amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;n&amp;quot;}&lt;/code&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;shabondi.class (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; class name of Shabondi service, only
the following two class names are legal:
&lt;ul&gt;
&lt;li&gt;Shabondi source: &lt;code&gt;oharastream.ohara.shabondi.ShabondiSource&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Shabondi sink: &lt;code&gt;oharastream.ohara.shabondi.ShabondiSink&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;shabondi.client.port (&lt;strong&gt;int&lt;/strong&gt;) - The Shabondi service client port&lt;/li&gt;
&lt;li&gt;imageName (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; docker image&lt;/li&gt;
&lt;li&gt;nodeNames &lt;strong&gt;array(string)&lt;/strong&gt; - The nodes that running this Shabondi.
Currently, Shabondi not support multiple nodes deployment. So
nodeNames only can be contained one node when start shabondi
service, otherwise you&amp;rsquo;ll get an error.&lt;/li&gt;
&lt;li&gt;tags (&lt;strong&gt;object&lt;/strong&gt;) &amp;mdash; the extra parameter for this object&lt;/li&gt;
&lt;li&gt;routes (&lt;strong&gt;object&lt;/strong&gt;) -&lt;/li&gt;
&lt;li&gt;jmxPort (&lt;strong&gt;int&lt;/strong&gt;) - the JVM jmx port for Shabondi service&lt;/li&gt;
&lt;li&gt;xms (&lt;strong&gt;int&lt;/strong&gt;) - the initial memory allocation pool for JVM&lt;/li&gt;
&lt;li&gt;xmx (&lt;strong&gt;int&lt;/strong&gt;) - the maximum memory allocation pool for JVM&lt;/li&gt;
&lt;li&gt;author (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash;&lt;/li&gt;
&lt;li&gt;revision (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash;&lt;/li&gt;
&lt;li&gt;version (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Shabondi Source only settings&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;shabondi.source.toTopics (&lt;strong&gt;array(object)&lt;/strong&gt;) - The topic which
Shabondi source service would write the data to.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Shabondi Sink only settings&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;shabondi.sink.fromTopics (&lt;strong&gt;array(object)&lt;/strong&gt;) - The topic which
Shabondi sink service would read the data from.&lt;/li&gt;
&lt;li&gt;shabondi.sink.group.idletime (&lt;strong&gt;duration&lt;/strong&gt;) - The maximum idle
time of each sink data group.&lt;/li&gt;
&lt;li&gt;shabondi.sink.poll.timeout(&lt;strong&gt;duration&lt;/strong&gt;) - The maximum time of
each consumer poll.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following information are updated by Ohara&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;lastModified (&lt;strong&gt;long&lt;/strong&gt;) &amp;mdash; the last time to update this
shabondi service&lt;/li&gt;
&lt;li&gt;state (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; the state of a started shabondi
service&lt;/li&gt;
&lt;li&gt;aliveNodes (&lt;strong&gt;Set(string)&lt;/strong&gt;) &amp;mdash; the nodes hosting this shabondi
service&lt;/li&gt;
&lt;li&gt;error (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; the error message from a failed
shabondi service. If the a shabondi service is fine or
un-started, you won&amp;rsquo;t get this field.&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://oharastream.github.io/en/docs/master/custom_connector/#metrics&#34;&gt;nodeMetrics&lt;/a&gt; (&lt;strong&gt;object&lt;/strong&gt;) &amp;mdash;
the metrics from a running connector
&lt;ul&gt;
&lt;li&gt;meters (&lt;strong&gt;array(object)&lt;/strong&gt;) &amp;mdash; the metrics in meter type
&lt;ul&gt;
&lt;li&gt;meters[i].name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the number of this meter
(normally, it is unique)&lt;/li&gt;
&lt;li&gt;meters[i].value (&lt;strong&gt;double&lt;/strong&gt;) &amp;mdash; the value in double&lt;/li&gt;
&lt;li&gt;meters[i].valueInPerSec (&lt;strong&gt;double&lt;/strong&gt;) &amp;mdash; the average
value in per second&lt;/li&gt;
&lt;li&gt;meters[i].unit (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the unit of value&lt;/li&gt;
&lt;li&gt;meters[i].document (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; human-readable
description to this meter&lt;/li&gt;
&lt;li&gt;meters[i].queryTime (&lt;strong&gt;Long&lt;/strong&gt;) &amp;mdash; the time we query
this meter from remote nodes&lt;/li&gt;
&lt;li&gt;meters[i].startTime (&lt;strong&gt;Long&lt;/strong&gt;) &amp;mdash; the time to start
this meter (not all services offer this record)&lt;/li&gt;
&lt;li&gt;meters[i].lastModified (&lt;strong&gt;Long&lt;/strong&gt;) &amp;mdash; the time of
modifying metrics&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;list-all&#34;&gt;List settings of all Shabondi services&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/shabondis&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
  {
    &amp;quot;author&amp;quot;: &amp;quot;root&amp;quot;,
    &amp;quot;brokerClusterKey&amp;quot;: {
      &amp;quot;group&amp;quot;: &amp;quot;group0&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;bk00&amp;quot;
    },
    &amp;quot;name&amp;quot;: &amp;quot;shabondi0&amp;quot;,
    &amp;quot;xms&amp;quot;: 1024,
    &amp;quot;routes&amp;quot;: {},
    &amp;quot;state&amp;quot;: &amp;quot;RUNNING&amp;quot;,
    &amp;quot;lastModified&amp;quot;: 1587100361274,
    &amp;quot;shabondi.client.port&amp;quot;: 58456,
    &amp;quot;shabondi.source.toTopics&amp;quot;: [
      {
        &amp;quot;group&amp;quot;: &amp;quot;group0&amp;quot;,
        &amp;quot;name&amp;quot;: &amp;quot;topic0&amp;quot;
      }
    ],
    &amp;quot;tags&amp;quot;: {},
    &amp;quot;xmx&amp;quot;: 1024,
    &amp;quot;shabondi.class&amp;quot;: &amp;quot;oharastream.ohara.shabondi.ShabondiSource&amp;quot;,
    &amp;quot;nodeMetrics&amp;quot;: {
      &amp;quot;node00&amp;quot;: {
        &amp;quot;meters&amp;quot;: [
          {
            &amp;quot;document&amp;quot;: &amp;quot;The number of received rows&amp;quot;,
            &amp;quot;lastModified&amp;quot;: 1587100347637,
            &amp;quot;name&amp;quot;: &amp;quot;total-rows&amp;quot;,
            &amp;quot;queryTime&amp;quot;: 1587100360577,
            &amp;quot;startTime&amp;quot;: 1587100347637,
            &amp;quot;unit&amp;quot;: &amp;quot;row&amp;quot;,
            &amp;quot;value&amp;quot;: 0.0,
            &amp;quot;valueInPerSec&amp;quot;: 0.0
          }
        ]
      }
    },
    &amp;quot;imageName&amp;quot;: &amp;quot;oharastream/shabondi:0.11.0-SNAPSHOT&amp;quot;,
    &amp;quot;revision&amp;quot;: &amp;quot;7cb25202c5308095546e5a6a2b96480d9d3104e1&amp;quot;,
    &amp;quot;version&amp;quot;: &amp;quot;0.11.0-SNAPSHOT&amp;quot;,
    &amp;quot;aliveNodes&amp;quot;: [
      &amp;quot;node00&amp;quot;
    ],
    &amp;quot;jmxPort&amp;quot;: 56586,
    &amp;quot;kind&amp;quot;: &amp;quot;source&amp;quot;,
    &amp;quot;group&amp;quot;: &amp;quot;group0&amp;quot;,
    &amp;quot;nodeNames&amp;quot;: [
      &amp;quot;node00&amp;quot;
    ]
  }
]
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;create&#34;&gt;Create the settings of a Shabondi service&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;POST /v0/shabondis&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Request&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;shabondi0&amp;quot;,
  &amp;quot;group&amp;quot;: &amp;quot;group0&amp;quot;,
  &amp;quot;shabondi.class&amp;quot;: &amp;quot;oharastream.ohara.shabondi.ShabondiSource&amp;quot;,
  &amp;quot;shabondi.client.port&amp;quot;: 58456,
  &amp;quot;shabondi.source.toTopics&amp;quot;: [
    {&amp;quot;name&amp;quot;: &amp;quot;topic0&amp;quot;,&amp;quot;group&amp;quot;: &amp;quot;group0&amp;quot;}
  ],
  &amp;quot;brokerClusterKey&amp;quot;: {
    &amp;quot;group&amp;quot;: &amp;quot;group0&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;bk00&amp;quot;
  },
  &amp;quot;nodeNames&amp;quot;: [
    &amp;quot;node00&amp;quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;author&amp;quot;: &amp;quot;root&amp;quot;,
  &amp;quot;brokerClusterKey&amp;quot;: {
    &amp;quot;group&amp;quot;: &amp;quot;group0&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;bk00&amp;quot;
  },
  &amp;quot;name&amp;quot;: &amp;quot;shabondi0&amp;quot;,
  &amp;quot;xms&amp;quot;: 1024,
  &amp;quot;routes&amp;quot;: {},
  &amp;quot;lastModified&amp;quot;: 1587101035977,
  &amp;quot;shabondi.client.port&amp;quot;: 58456,
  &amp;quot;shabondi.source.toTopics&amp;quot;: [
    {
      &amp;quot;group&amp;quot;: &amp;quot;group0&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;topic0&amp;quot;
    }
  ],
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;xmx&amp;quot;: 1024,
  &amp;quot;shabondi.class&amp;quot;: &amp;quot;oharastream.ohara.shabondi.ShabondiSource&amp;quot;,
  &amp;quot;nodeMetrics&amp;quot;: {},
  &amp;quot;imageName&amp;quot;: &amp;quot;oharastream/shabondi:0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;revision&amp;quot;: &amp;quot;7cb25202c5308095546e5a6a2b96480d9d3104e1&amp;quot;,
  &amp;quot;version&amp;quot;: &amp;quot;0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;aliveNodes&amp;quot;: [],
  &amp;quot;jmxPort&amp;quot;: 56726,
  &amp;quot;kind&amp;quot;: &amp;quot;source&amp;quot;,
  &amp;quot;group&amp;quot;: &amp;quot;group0&amp;quot;,
  &amp;quot;nodeNames&amp;quot;: [
    &amp;quot;node00&amp;quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;get&#34;&gt;Get the settings of a Shabondi service&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/shabondis/${name}?group=${group}&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;author&amp;quot;: &amp;quot;vitojeng&amp;quot;,
  &amp;quot;brokerClusterKey&amp;quot;: {
    &amp;quot;group&amp;quot;: &amp;quot;group0&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;bk00&amp;quot;
  },
  &amp;quot;name&amp;quot;: &amp;quot;shabondi0&amp;quot;,
  &amp;quot;xms&amp;quot;: 1024,
  &amp;quot;routes&amp;quot;: {},
  &amp;quot;lastModified&amp;quot;: 1587101035977,
  &amp;quot;shabondi.client.port&amp;quot;: 58456,
  &amp;quot;shabondi.source.toTopics&amp;quot;: [
    {
      &amp;quot;group&amp;quot;: &amp;quot;group0&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;topic0&amp;quot;
    }
  ],
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;xmx&amp;quot;: 1024,
  &amp;quot;shabondi.class&amp;quot;: &amp;quot;oharastream.ohara.shabondi.ShabondiSource&amp;quot;,
  &amp;quot;nodeMetrics&amp;quot;: {},
  &amp;quot;imageName&amp;quot;: &amp;quot;oharastream/shabondi:0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;revision&amp;quot;: &amp;quot;7cb25202c5308095546e5a6a2b96480d9d3104e1&amp;quot;,
  &amp;quot;version&amp;quot;: &amp;quot;0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;aliveNodes&amp;quot;: [],
  &amp;quot;jmxPort&amp;quot;: 56726,
  &amp;quot;kind&amp;quot;: &amp;quot;source&amp;quot;,
  &amp;quot;group&amp;quot;: &amp;quot;group0&amp;quot;,
  &amp;quot;nodeNames&amp;quot;: [
    &amp;quot;node00&amp;quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;update&#34;&gt;Update the settings of a Shabondi service&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/shabondis/${name}?group=${group}&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Request&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;shabondi.client.port&amp;quot;: 96456
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;author&amp;quot;: &amp;quot;vitojeng&amp;quot;,
  &amp;quot;brokerClusterKey&amp;quot;: {
    &amp;quot;group&amp;quot;: &amp;quot;group0&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;bk00&amp;quot;
  },
  &amp;quot;name&amp;quot;: &amp;quot;shabondi0&amp;quot;,
  &amp;quot;xms&amp;quot;: 1024,
  &amp;quot;routes&amp;quot;: {},
  &amp;quot;lastModified&amp;quot;: 1587106367767,
  &amp;quot;shabondi.client.port&amp;quot;: 38400,
  &amp;quot;shabondi.source.toTopics&amp;quot;: [
    {
      &amp;quot;group&amp;quot;: &amp;quot;group0&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;topic0&amp;quot;
    }
  ],
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;xmx&amp;quot;: 1024,
  &amp;quot;shabondi.class&amp;quot;: &amp;quot;oharastream.ohara.shabondi.ShabondiSource&amp;quot;,
  &amp;quot;nodeMetrics&amp;quot;: {},
  &amp;quot;imageName&amp;quot;: &amp;quot;oharastream/shabondi:0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;revision&amp;quot;: &amp;quot;7cb25202c5308095546e5a6a2b96480d9d3104e1&amp;quot;,
  &amp;quot;version&amp;quot;: &amp;quot;0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;aliveNodes&amp;quot;: [],
  &amp;quot;jmxPort&amp;quot;: 56726,
  &amp;quot;kind&amp;quot;: &amp;quot;source&amp;quot;,
  &amp;quot;group&amp;quot;: &amp;quot;group0&amp;quot;,
  &amp;quot;nodeNames&amp;quot;: [
    &amp;quot;node00&amp;quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;delete&#34;&gt;Delete the settings of Shabondi&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;DELETE /v0/shabondis/${name}?group=${group}&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code&gt;202 Accepted
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    It is ok to delete an nonexistent properties, and the response is
204 NoContent.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;start&#34;&gt;Start a Shabondi service&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/shabondis/${name}/start?group=${group}&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code&gt;202 Accepted
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    You should use &lt;a href=&#34;#get&#34;&gt;get shabondi&lt;/a&gt; to fetch up-to-date status
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;stop&#34;&gt;Stop a Shabondi service&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/shabondis/${name}/stop?group=${group}&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code&gt;202 Accepted
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    You should use &lt;a href=&#34;#get&#34;&gt;get shabondi&lt;/a&gt; to fetch up-to-date status
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Stream</title>
      <link>https://oharastream.github.io/en/docs/master/rest-api/streams/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0100</pubDate>
      <guid>https://oharastream.github.io/en/docs/master/rest-api/streams/</guid>
      <description>&lt;p&gt;Ohara Stream is a unparalleled wrap of kafka streaming. It leverages and
enhances 
&lt;a href=&#34;https://kafka.apache.org/documentation/streams&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kafka Streams&lt;/a&gt;
to make developer easily design and implement the streaming application.
More details of developing streaming application is in

&lt;a href=&#34;https://oharastream.github.io/en/docs/master/custom_stream/&#34;&gt;custom stream guideline&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Assume that you have completed a streaming application via Ohara Java
APIs, and you have generated a jar including your streaming code. By
Ohara Restful APIs, you are enable to control, deploy, and monitor your
streaming application. As with cluster APIs, Ohara leverages docker
container to host streaming application. Of course, you can apply your
favor container management tool including simple (based on ssh) and k8s
when you are starting Ohara.&lt;/p&gt;
&lt;p&gt;Before stating to use restful APIs, please ensure that all nodes have
downloaded the 
&lt;a href=&#34;https://cloud.docker.com/u/oharastream/repository/docker/oharastream/stream&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Stream image&lt;/a&gt;.
The jar you uploaded to run streaming application will be included in
the image and then executes as a docker container.
The 
&lt;a href=&#34;https://cloud.docker.com/u/oharastream/repository/docker/oharastream/stream&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Stream image&lt;/a&gt;
is kept in each node so don&amp;rsquo;t worry about the network. We all hate
re-download everything when running services.&lt;/p&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    If you implement the Ohara stream application, you must pack to jar
file and use the File API upload jar file then setting the jarKey to
create the Stream API.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The following information of Stream are updated by Ohara.&lt;/p&gt;
&lt;h2 id=&#34;stored-data&#34;&gt;stream stored data&lt;/h2&gt;
&lt;p&gt;The following are common settings to a stream app.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; cluster name. The legal character is number,
lowercase alphanumeric characters, or &amp;lsquo;.&amp;rsquo;&lt;/li&gt;
&lt;li&gt;group (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; cluster group. The legal character is number,
lowercase alphanumeric characters, or &amp;lsquo;.&amp;rsquo;&lt;/li&gt;
&lt;li&gt;jarKey (&lt;strong&gt;object&lt;/strong&gt;) &amp;mdash; the used jar key&lt;/li&gt;
&lt;li&gt;jmxPort (&lt;strong&gt;int&lt;/strong&gt;) &amp;mdash; expose port for jmx&lt;/li&gt;
&lt;li&gt;className (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the class to be executed. This field is optional
and Configurator will pick up a class from the input jar. However, it throw
exception if there are many available classes in the jar file.&lt;/li&gt;
&lt;li&gt;from (&lt;strong&gt;array(TopicKey)&lt;/strong&gt;) &amp;mdash; source topic&lt;/li&gt;
&lt;li&gt;to (&lt;strong&gt;array(TopicKey)&lt;/strong&gt;) &amp;mdash; target topic&lt;/li&gt;
&lt;li&gt;nodeNames (&lt;strong&gt;array(string)&lt;/strong&gt;) &amp;mdash; the nodes running the stream
process&lt;/li&gt;
&lt;li&gt;brokerClusterKey (&lt;strong&gt;object&lt;/strong&gt;) &amp;mdash; the broker cluster key used for
stream running
&lt;ul&gt;
&lt;li&gt;brokerClusterKey.group (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; the group of
broker cluster&lt;/li&gt;
&lt;li&gt;brokerClusterKey.name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the name of broker
cluster&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    the following forms are legal as well: (1) &lt;code&gt;{&amp;quot;name&amp;quot;: &amp;quot;n&amp;quot;}&lt;/code&gt;, (2) &lt;code&gt;&amp;quot;n&amp;quot;&lt;/code&gt;.
Both forms are converted to &lt;code&gt;{&amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;n&amp;quot;}&lt;/code&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;ol start=&#34;10&#34;&gt;
&lt;li&gt;tags (&lt;strong&gt;object&lt;/strong&gt;) &amp;mdash; the user defined parameters&lt;/li&gt;
&lt;li&gt;aliveNodes (&lt;strong&gt;array(string)&lt;/strong&gt;) &amp;mdash; the nodes that host the running
containers of stream cluster&lt;/li&gt;
&lt;li&gt;state (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; only started/failed stream has state
(DEAD if all containers are not running, else RUNNING)&lt;/li&gt;
&lt;li&gt;error (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; the error message from a failed
stream. If the stream is fine or un-started, you won&amp;rsquo;t get this
field.&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://oharastream.github.io/en/docs/master/custom_connector/#metrics&#34;&gt;nodeMetrics&lt;/a&gt; (&lt;strong&gt;object&lt;/strong&gt;) &amp;mdash;
the metrics from this stream.
&lt;ul&gt;
&lt;li&gt;meters (&lt;strong&gt;array(object)&lt;/strong&gt;) &amp;mdash; the metrics in meter type
&lt;ul&gt;
&lt;li&gt;meters[i].value (&lt;strong&gt;double&lt;/strong&gt;) &amp;mdash; the number stored in meter&lt;/li&gt;
&lt;li&gt;meters[i].unit (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; unit for value&lt;/li&gt;
&lt;li&gt;meters[i].document (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; document of this meter&lt;/li&gt;
&lt;li&gt;meters[i].queryTime (&lt;strong&gt;long&lt;/strong&gt;) &amp;mdash; the time of query
metrics from remote machine&lt;/li&gt;
&lt;li&gt;meters[i].startTime (&lt;strong&gt;option(long)&lt;/strong&gt;) &amp;mdash; the time of
record generated in remote machine&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;lastModified (&lt;strong&gt;long&lt;/strong&gt;) &amp;mdash; last modified this jar time&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;create&#34;&gt;create properties of specific stream&lt;/h2&gt;
&lt;p&gt;Create the properties of a stream.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;POST /v0/streams&lt;/em&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; new stream name. This is the object unique
name ; default is random string.&lt;/li&gt;
&lt;li&gt;group (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; group name for current stream ; default value
is &amp;ldquo;default&amp;rdquo;&lt;/li&gt;
&lt;li&gt;imageName (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; image name of stream used to ; default is
oharastream/stream:0.11.0-SNAPSHOT&lt;/li&gt;
&lt;li&gt;nodeNames (&lt;strong&gt;array(string)&lt;/strong&gt;) &amp;mdash; node name list of stream used to ;
default is empty&lt;/li&gt;
&lt;li&gt;tags (&lt;strong&gt;object&lt;/strong&gt;) &amp;mdash; a key-value map of user defined data ; default
is empty&lt;/li&gt;
&lt;li&gt;jarKey (&lt;strong&gt;object&lt;/strong&gt;) &amp;mdash; the used jar key
&lt;ul&gt;
&lt;li&gt;group (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the group name of this jar&lt;/li&gt;
&lt;li&gt;name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the name of this jar&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;brokerClusterKey (&lt;strong&gt;option(object)&lt;/strong&gt;) &amp;mdash; the broker cluster used
for stream running ; default we will auto fill this parameter for
you if you don&amp;rsquo;t specify it and there only exists one broker
cluster.&lt;/li&gt;
&lt;li&gt;jmxPort (&lt;strong&gt;int&lt;/strong&gt;) &amp;mdash; expose port for jmx ; default is random port&lt;/li&gt;
&lt;li&gt;from (&lt;strong&gt;array(TopicKey)&lt;/strong&gt;) &amp;mdash; source topic ; default is empty array&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Currently, stream uses a &amp;ldquo;single flow&amp;rdquo; for users to define their
own data flow, we need a better structure to support multiple
topics.&lt;/p&gt;
&lt;p&gt;We only support one topic for current version. We will throw
exception in start api if you assign more than 1 topic. We will
support multiple topics on issue [#688](&lt;a href=&#34;https://github.com/oharastream/ohara/issues/688&#34;&gt;https://github.com/oharastream/ohara/issues/688&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;ol start=&#34;10&#34;&gt;
&lt;li&gt;to (&lt;strong&gt;array(TopicKey)&lt;/strong&gt;) &amp;mdash; target topic ; default is empty array&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Currently, stream uses a &amp;ldquo;single flow&amp;rdquo; for users to define their
own data flow, we need a better structure to support multiple
topics.&lt;/p&gt;
&lt;p&gt;We only support one topic for current version. We will throw
exception in start api if you assign more than 1 topic. We will
support multiple topics on issue [#688](&lt;a href=&#34;https://github.com/oharastream/ohara/issues/688&#34;&gt;https://github.com/oharastream/ohara/issues/688&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Request&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;streamtest1&amp;quot;,
  &amp;quot;brokerClusterKey&amp;quot;: &amp;quot;bk&amp;quot;,
  &amp;quot;jarKey&amp;quot;: &amp;quot;ohara-it-stream.jar&amp;quot;,
  &amp;quot;nodeNames&amp;quot;: [&amp;quot;node00&amp;quot;],
  &amp;quot;from&amp;quot;: [&amp;quot;topic0&amp;quot;],
  &amp;quot;to&amp;quot;: [&amp;quot;topic1&amp;quot;]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;p&gt;Response format is as 
&lt;a href=&#34;#stored-data&#34;&gt;stream stored format&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;author&amp;quot;: &amp;quot;root&amp;quot;,
  &amp;quot;brokerClusterKey&amp;quot;: {
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;bk&amp;quot;
  },
  &amp;quot;name&amp;quot;: &amp;quot;streamtest1&amp;quot;,
  &amp;quot;xms&amp;quot;: 1024,
  &amp;quot;routes&amp;quot;: {},
  &amp;quot;lastModified&amp;quot;: 1579145546218,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;xmx&amp;quot;: 1024,
  &amp;quot;imageName&amp;quot;: &amp;quot;oharastream/stream:0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;jarKey&amp;quot;: {
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;ohara-it-stream.jar&amp;quot;
  },
  &amp;quot;to&amp;quot;: [
    {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;topic1&amp;quot;
    }
  ],
  &amp;quot;revision&amp;quot;: &amp;quot;b303f3c2e52647ee5e79e55f9d74a5e51238a92c&amp;quot;,
  &amp;quot;version&amp;quot;: &amp;quot;0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;aliveNodes&amp;quot;: [],
  &amp;quot;stream.class&amp;quot;: &amp;quot;oharastream.ohara.it.stream.DumbStream&amp;quot;,
  &amp;quot;from&amp;quot;: [
    {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;topic0&amp;quot;
    }
  ],
  &amp;quot;nodeMetrics&amp;quot;: [],
  &amp;quot;jmxPort&amp;quot;: 44914,
  &amp;quot;kind&amp;quot;: &amp;quot;stream&amp;quot;,
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
  &amp;quot;nodeNames&amp;quot;: [
    &amp;quot;node00&amp;quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    The stream, which is just created, does not have any metrics.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;get&#34;&gt;get information from a specific stream cluster&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/streams/${name}?group=$group&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    We will use the default value as the query parameter &amp;ldquo;?group=&amp;rdquo; if you
don&amp;rsquo;t specify it.
  &lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;p&gt;Response format is as 
&lt;a href=&#34;#stored-data&#34;&gt;stream stored format&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;author&amp;quot;: &amp;quot;root&amp;quot;,
  &amp;quot;brokerClusterKey&amp;quot;: {
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;bk&amp;quot;
  },
  &amp;quot;name&amp;quot;: &amp;quot;streamtest1&amp;quot;,
  &amp;quot;xms&amp;quot;: 1024,
  &amp;quot;routes&amp;quot;: {},
  &amp;quot;lastModified&amp;quot;: 1579145546218,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;xmx&amp;quot;: 1024,
  &amp;quot;imageName&amp;quot;: &amp;quot;oharastream/stream:0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;jarKey&amp;quot;: {
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;ohara-it-stream.jar&amp;quot;
  },
  &amp;quot;to&amp;quot;: [
    {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;topic1&amp;quot;
    }
  ],
  &amp;quot;revision&amp;quot;: &amp;quot;b303f3c2e52647ee5e79e55f9d74a5e51238a92c&amp;quot;,
  &amp;quot;version&amp;quot;: &amp;quot;0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;aliveNodes&amp;quot;: [],
  &amp;quot;stream.class&amp;quot;: &amp;quot;oharastream.ohara.it.stream.DumbStream&amp;quot;,
  &amp;quot;from&amp;quot;: [
    {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;topic0&amp;quot;
    }
  ],
  &amp;quot;nodeMetrics&amp;quot;: [],
  &amp;quot;jmxPort&amp;quot;: 44914,
  &amp;quot;kind&amp;quot;: &amp;quot;stream&amp;quot;,
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
  &amp;quot;nodeNames&amp;quot;: [
    &amp;quot;node00&amp;quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;list-information-of-stream-cluster&#34;&gt;list information of stream cluster&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/streams&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;the accepted query keys are listed below&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;author&lt;/li&gt;
&lt;li&gt;group&lt;/li&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;li&gt;lastModified&lt;/li&gt;
&lt;li&gt;tags&lt;/li&gt;
&lt;li&gt;state&lt;/li&gt;
&lt;li&gt;aliveNodes&lt;/li&gt;
&lt;li&gt;key&lt;/li&gt;
&lt;li&gt;version&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;p&gt;Response format is as 
&lt;a href=&#34;#stored-data&#34;&gt;stream stored format&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
  {
    &amp;quot;author&amp;quot;: &amp;quot;root&amp;quot;,
    &amp;quot;brokerClusterKey&amp;quot;: {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;bk&amp;quot;
    },
    &amp;quot;name&amp;quot;: &amp;quot;streamtest1&amp;quot;,
    &amp;quot;xms&amp;quot;: 1024,
    &amp;quot;routes&amp;quot;: {},
    &amp;quot;lastModified&amp;quot;: 1579145546218,
    &amp;quot;tags&amp;quot;: {},
    &amp;quot;xmx&amp;quot;: 1024,
    &amp;quot;imageName&amp;quot;: &amp;quot;oharastream/stream:0.11.0-SNAPSHOT&amp;quot;,
    &amp;quot;jarKey&amp;quot;: {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;ohara-it-stream.jar&amp;quot;
    },
    &amp;quot;to&amp;quot;: [
      {
        &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
        &amp;quot;name&amp;quot;: &amp;quot;topic1&amp;quot;
      }
    ],
    &amp;quot;revision&amp;quot;: &amp;quot;b303f3c2e52647ee5e79e55f9d74a5e51238a92c&amp;quot;,
    &amp;quot;version&amp;quot;: &amp;quot;0.11.0-SNAPSHOT&amp;quot;,
    &amp;quot;aliveNodes&amp;quot;: [],
    &amp;quot;stream.class&amp;quot;: &amp;quot;oharastream.ohara.it.stream.DumbStream&amp;quot;,
    &amp;quot;from&amp;quot;: [
      {
        &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
        &amp;quot;name&amp;quot;: &amp;quot;topic0&amp;quot;
      }
    ],
    &amp;quot;nodeMetrics&amp;quot;: [],
    &amp;quot;jmxPort&amp;quot;: 44914,
    &amp;quot;kind&amp;quot;: &amp;quot;stream&amp;quot;,
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
    &amp;quot;nodeNames&amp;quot;: [
      &amp;quot;node00&amp;quot;
    ]
  }
]
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;update&#34;&gt;update properties of specific stream&lt;/h2&gt;
&lt;p&gt;Update the properties of a non-started stream.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/streams/${name}?group=$group&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    If the required stream (group, name) was not exists, we will try to use
this request as &lt;a href=&#34;#create&#34;&gt;create stream&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;imageName (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; image name of stream used to.&lt;/li&gt;
&lt;li&gt;nodeNames (&lt;strong&gt;option(array(string))&lt;/strong&gt;) &amp;mdash; node name list of stream
used to.&lt;/li&gt;
&lt;li&gt;tags (&lt;strong&gt;option(object)&lt;/strong&gt;) &amp;mdash; a key-value map of user defined data.&lt;/li&gt;
&lt;li&gt;jarKey (&lt;strong&gt;option(option(object))&lt;/strong&gt;) &amp;mdash; the used jar key
&lt;ul&gt;
&lt;li&gt;group (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; the group name of this jar&lt;/li&gt;
&lt;li&gt;name (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; the name without extension of this
jar&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;jmxPort (&lt;strong&gt;option(int)&lt;/strong&gt;) &amp;mdash; expose port for jmx.&lt;/li&gt;
&lt;li&gt;from (&lt;strong&gt;option(array(string))&lt;/strong&gt;) &amp;mdash; source topic.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Currently, stream uses a &amp;ldquo;single flow&amp;rdquo; for users to define their
own data flow, we need a better structure to support multiple
topics.&lt;/p&gt;
&lt;p&gt;we only support one topic for current version. We will throw
exception in start api if you assign more than 1 topic. We will
support multiple topics on issue [#688](&lt;a href=&#34;https://github.com/oharastream/ohara/issues/688&#34;&gt;https://github.com/oharastream/ohara/issues/688&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;to (&lt;strong&gt;option(array(string))&lt;/strong&gt;) &amp;mdash; target topic.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Currently, stream uses a &amp;ldquo;single flow&amp;rdquo; for users to define their
own data flow, we need a better structure to support multiple
topics.&lt;/p&gt;
&lt;p&gt;we only support one topic for current version. We will throw
exception in start api if you assign more than 1 topic. We will
support multiple topics on issue [#688](&lt;a href=&#34;https://github.com/oharastream/ohara/issues/688&#34;&gt;https://github.com/oharastream/ohara/issues/688&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Request&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;from&amp;quot;: [&amp;quot;topic2&amp;quot;],
  &amp;quot;to&amp;quot;: [&amp;quot;topic3&amp;quot;],
  &amp;quot;jarKey&amp;quot;: &amp;quot;ohara-it-stream.jar&amp;quot;,
  &amp;quot;nodeNames&amp;quot;: [&amp;quot;node01&amp;quot;]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;p&gt;Response format is as 
&lt;a href=&#34;#stored-data&#34;&gt;stream stored format&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;author&amp;quot;: &amp;quot;root&amp;quot;,
  &amp;quot;brokerClusterKey&amp;quot;: {
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;bk&amp;quot;
  },
  &amp;quot;name&amp;quot;: &amp;quot;streamtest1&amp;quot;,
  &amp;quot;xms&amp;quot;: 1024,
  &amp;quot;routes&amp;quot;: {},
  &amp;quot;lastModified&amp;quot;: 1579153777586,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;xmx&amp;quot;: 1024,
  &amp;quot;imageName&amp;quot;: &amp;quot;oharastream/stream:0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;jarKey&amp;quot;: {
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;ohara-it-stream.jar&amp;quot;
  },
  &amp;quot;to&amp;quot;: [
    {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;topic3&amp;quot;
    }
  ],
  &amp;quot;revision&amp;quot;: &amp;quot;b303f3c2e52647ee5e79e55f9d74a5e51238a92c&amp;quot;,
  &amp;quot;version&amp;quot;: &amp;quot;0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;aliveNodes&amp;quot;: [],
  &amp;quot;stream.class&amp;quot;: &amp;quot;oharastream.ohara.it.stream.DumbStream&amp;quot;,
  &amp;quot;from&amp;quot;: [
    {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;topic2&amp;quot;
    }
  ],
  &amp;quot;nodeMetrics&amp;quot;: [],
  &amp;quot;jmxPort&amp;quot;: 44914,
  &amp;quot;kind&amp;quot;: &amp;quot;stream&amp;quot;,
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
  &amp;quot;nodeNames&amp;quot;: [
    &amp;quot;node01&amp;quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;delete-properties-of-specific-stream&#34;&gt;delete properties of specific stream&lt;/h2&gt;
&lt;p&gt;Delete the properties of a non-started stream. This api only remove the
stream component which is stored in pipeline.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;DELETE /v0/streams/${name}?group=$group&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    We will use the default value as the query parameter &amp;ldquo;?group=&amp;rdquo; if you
don&amp;rsquo;t specify it.
  &lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code&gt;204 NoContent
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    It is ok to delete an nonexistent properties, and the response is
204 NoContent.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;start-a-stream&#34;&gt;start a Stream&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/streams/${name}/start?group=$group&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    We will use the default value as the query parameter &amp;ldquo;?group=&amp;rdquo; if you
don&amp;rsquo;t specify it.
  &lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code&gt;202 Accepted
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    You should use &lt;a href=&#34;#get&#34;&gt;get stream&lt;/a&gt; to fetch up-to-date status
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;stop&#34;&gt;stop a Stream&lt;/h2&gt;
&lt;p&gt;This action will graceful stop and remove all docker containers belong
to this stream. Note: successful stop stream will have no status.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/streams/${name}/stop?group=$group[&amp;amp;force=true]&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Query Parameters
&lt;ol&gt;
&lt;li&gt;force (&lt;strong&gt;boolean&lt;/strong&gt;) &amp;mdash; true if you don&amp;rsquo;t want to wait the
graceful shutdown (it can save your time but may damage your
data).&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    We will use the default value as the query parameter &amp;ldquo;?group=&amp;rdquo; if you
don&amp;rsquo;t specify it.
  &lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code&gt;202 Accepted
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    You should use &lt;a href=&#34;#get&#34;&gt;get stream&lt;/a&gt; to fetch up-to-date status
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;get-topology-tree-graph-from-specific-stream&#34;&gt;get topology tree graph from specific stream&lt;/h2&gt;
&lt;p&gt;[TODO] This is not implemented yet !&lt;/p&gt;
&lt;p&gt;&lt;em&gt;GET /v0/streams/view/${name}&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;jarInfo (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the upload jar information&lt;/li&gt;
&lt;li&gt;name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the stream name&lt;/li&gt;
&lt;li&gt;poneglyph (&lt;strong&gt;object&lt;/strong&gt;) &amp;mdash; the stream topology tree graph
&lt;ul&gt;
&lt;li&gt;steles (&lt;strong&gt;array(object)&lt;/strong&gt;) &amp;mdash; the topology collection
&lt;ul&gt;
&lt;li&gt;steles[i].kind (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; this component
kind (SOURCE, PROCESSOR, or SINK)&lt;/li&gt;
&lt;li&gt;steles[i].key (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; this component kind with order&lt;/li&gt;
&lt;li&gt;steles[i].name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; depend on kind, the name is
&lt;ul&gt;
&lt;li&gt;SOURCE &amp;mdash; source topic name&lt;/li&gt;
&lt;li&gt;PROCESSOR &amp;mdash; the function name&lt;/li&gt;
&lt;li&gt;SINK &amp;mdash; target topic name&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;steles[i].from (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the prior
component key (could be empty if this is the first
component)&lt;/li&gt;
&lt;li&gt;steles[i].to (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the posterior
component key (could be empty if this is the final
component)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;jarInfo&amp;quot;: {
    &amp;quot;name&amp;quot;: &amp;quot;stream-app&amp;quot;,
    &amp;quot;group&amp;quot;: &amp;quot;wk01&amp;quot;,
    &amp;quot;size&amp;quot;: 1234,
    &amp;quot;lastModified&amp;quot;: 1542102595892
  },
  &amp;quot;name&amp;quot;: &amp;quot;my-app&amp;quot;,
  &amp;quot;poneglyph&amp;quot;: {
    &amp;quot;steles&amp;quot;: [
      {
        &amp;quot;kind&amp;quot;: &amp;quot;SOURCE&amp;quot;,
        &amp;quot;key&amp;quot; : &amp;quot;SOURCE-0&amp;quot;,
        &amp;quot;name&amp;quot;: &amp;quot;stream-in&amp;quot;,
        &amp;quot;from&amp;quot;: &amp;quot;&amp;quot;,
        &amp;quot;to&amp;quot;: &amp;quot;PROCESSOR-1&amp;quot;
      },
      {
        &amp;quot;kind&amp;quot;: &amp;quot;PROCESSOR&amp;quot;,
        &amp;quot;key&amp;quot; : &amp;quot;PROCESSOR-1&amp;quot;,
        &amp;quot;name&amp;quot;: &amp;quot;filter&amp;quot;,
        &amp;quot;from&amp;quot;: &amp;quot;SOURCE-0&amp;quot;,
        &amp;quot;to&amp;quot;: &amp;quot;PROCESSOR-2&amp;quot;
      },
      {
        &amp;quot;kind&amp;quot;: &amp;quot;PROCESSOR&amp;quot;,
        &amp;quot;key&amp;quot; : &amp;quot;PROCESSOR-2&amp;quot;,
        &amp;quot;name&amp;quot;: &amp;quot;mapvalues&amp;quot;,
        &amp;quot;from&amp;quot;: &amp;quot;PROCESSOR-1&amp;quot;,
        &amp;quot;to&amp;quot;: &amp;quot;SINK-3&amp;quot;
      },
      {
        &amp;quot;kind&amp;quot;: &amp;quot;SINK&amp;quot;,
        &amp;quot;key&amp;quot; : &amp;quot;SINK-3&amp;quot;,
        &amp;quot;name&amp;quot;: &amp;quot;stream-out&amp;quot;,
        &amp;quot;from&amp;quot;: &amp;quot;PROCESSOR-2&amp;quot;,
        &amp;quot;to&amp;quot;: &amp;quot;&amp;quot;
      }
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Topic</title>
      <link>https://oharastream.github.io/en/docs/master/rest-api/topics/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0100</pubDate>
      <guid>https://oharastream.github.io/en/docs/master/rest-api/topics/</guid>
      <description>&lt;p&gt;Ohara topic is based on kafka topic. It means the creation of topic on
ohara will invoke a creation of kafka also. Also, the delete to Ohara
topic also invoke a delete request to kafka. The common properties in
topic are shown below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;group (&lt;strong&gt;string&lt;/strong&gt;) - topic group. The legal character is number,
lowercase alphanumeric characters, or &amp;lsquo;.&amp;rsquo;&lt;/li&gt;
&lt;li&gt;name (&lt;strong&gt;string&lt;/strong&gt;) - topic name. The legal character is number,
lowercase alphanumeric characters, or &amp;lsquo;.&amp;rsquo;&lt;/li&gt;
&lt;li&gt;brokerClusterKey (&lt;strong&gt;Object&lt;/strong&gt;) - target broker cluster.
&lt;ul&gt;
&lt;li&gt;brokerClusterKey.group (&lt;strong&gt;option(string)&lt;/strong&gt;) - the group of
cluster&lt;/li&gt;
&lt;li&gt;brokerClusterKey.name (&lt;strong&gt;string&lt;/strong&gt;) - the name of cluster&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
  &lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    the following forms are legal as well: (1) &lt;code&gt;{&amp;quot;name&amp;quot;: &amp;quot;n&amp;quot;}&lt;/code&gt;, (2) &lt;code&gt;&amp;quot;n&amp;quot;&lt;/code&gt;.
Both forms are converted to &lt;code&gt;{&amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;n&amp;quot;}&lt;/code&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;numberOfReplications (&lt;strong&gt;option(int)&lt;/strong&gt;) - the number of
replications&lt;/li&gt;
&lt;li&gt;numberOfPartitions (&lt;strong&gt;option(int)&lt;/strong&gt;)- the number of partitions for
this topic&lt;/li&gt;
&lt;li&gt;tags (&lt;strong&gt;option(object)&lt;/strong&gt;) - the extra description to this object&lt;/li&gt;
&lt;/ol&gt;
  &lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;ol&gt;
&lt;li&gt;The name must be unique in a broker cluster.&lt;/li&gt;
&lt;li&gt;There are many other available configs which are useful in
creating topic. Please ref &lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/brokers/&#34;&gt;broker clusters&lt;/a&gt;
to see how to retrieve the available configs for specific broker
cluster.&lt;/li&gt;
&lt;/ol&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The following information are tagged by Ohara.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;state (&lt;strong&gt;option(string)&lt;/strong&gt;) - state of a running topic. nothing if
the topic is not running.&lt;/li&gt;
&lt;li&gt;partitionInfos (&lt;strong&gt;Array(object)&lt;/strong&gt;) - the details of partitions.
&lt;ul&gt;
&lt;li&gt;index (&lt;strong&gt;int&lt;/strong&gt;) - the index of partition&lt;/li&gt;
&lt;li&gt;leaderNode (&lt;strong&gt;String&lt;/strong&gt;) - the leader (node) of this partition&lt;/li&gt;
&lt;li&gt;replicaNodes (&lt;strong&gt;Array(String)&lt;/strong&gt;) - the nodes hosting the
replica for this partition&lt;/li&gt;
&lt;li&gt;inSyncReplicaNodes (&lt;strong&gt;Array(String)&lt;/strong&gt;) - the nodes which have
fetched the newest data from leader&lt;/li&gt;
&lt;li&gt;beginningOffset (&lt;strong&gt;long&lt;/strong&gt;) - the beginning offset&lt;/li&gt;
&lt;li&gt;endOffset (&lt;strong&gt;endOffset&lt;/strong&gt;) - the latest offset (Normally, it is
the latest commit data)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;group (&lt;strong&gt;string&lt;/strong&gt;) - the group value is always &amp;ldquo;default&amp;rdquo;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#metrics&#34;&gt;nodeMetrics&lt;/a&gt; (&lt;strong&gt;object&lt;/strong&gt;) -
the metrics number of a running topic&lt;/li&gt;
&lt;li&gt;lastModified (&lt;strong&gt;long&lt;/strong&gt;) - the last time to update this ftp
information&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;store-a-topic-properties&#34;&gt;store a topic properties&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;POST /v0/topics&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;ol&gt;
&lt;li&gt;the name you pass to Ohara is used to build topic on kafka, and it
is restricted by Kafka ([a-zA-Z0-9._-])&lt;/li&gt;
&lt;li&gt;the ignored fields will
be auto-completed by Ohara Configurator. Also, you could update/replace
it by UPDATE request later.&lt;/li&gt;
&lt;li&gt;this API does NOT create a topic on
broker cluster. Instead, you should send START request to run a topic on
broker cluster actually&lt;/li&gt;
&lt;li&gt;There are many other available configs which
are useful in creating topic. Please ref
&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/brokers/&#34;&gt;broker clusters&lt;/a&gt; to see
how to retrieve the available configs for specific broker cluster.&lt;/li&gt;
&lt;/ol&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Request&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;brokerClusterKey&amp;quot;: &amp;quot;bk&amp;quot;,
  &amp;quot;name&amp;quot;: &amp;quot;topic0&amp;quot;,
  &amp;quot;numberOfReplications&amp;quot;: 1,
  &amp;quot;numberOfPartitions&amp;quot;: 1
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;brokerClusterKey&amp;quot;: {
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;bk&amp;quot;
  },
  &amp;quot;name&amp;quot;: &amp;quot;topic0&amp;quot;,
  &amp;quot;partitionInfos&amp;quot;: [],
  &amp;quot;lastModified&amp;quot;: 1578537142950,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;numberOfReplications&amp;quot;: 1,
  &amp;quot;nodeMetrics&amp;quot;: {
    &amp;quot;node00&amp;quot;: {
      &amp;quot;meters&amp;quot;: [
        {
          &amp;quot;document&amp;quot;: &amp;quot;BytesInPerSec&amp;quot;,
          &amp;quot;name&amp;quot;: &amp;quot;BytesInPerSec&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585069111069,
          &amp;quot;unit&amp;quot;: &amp;quot;bytes / SECONDS&amp;quot;,
          &amp;quot;value&amp;quot;: 2143210885
        },
        {
          &amp;quot;document&amp;quot;: &amp;quot;MessagesInPerSec&amp;quot;,
          &amp;quot;name&amp;quot;: &amp;quot;MessagesInPerSec&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585069111069,
          &amp;quot;unit&amp;quot;: &amp;quot;messages / SECONDS&amp;quot;,
          &amp;quot;value&amp;quot;: 2810000.0
        },
        {
          &amp;quot;document&amp;quot;: &amp;quot;TotalProduceRequestsPerSec&amp;quot;,
          &amp;quot;name&amp;quot;: &amp;quot;TotalProduceRequestsPerSec&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585069111069,
          &amp;quot;unit&amp;quot;: &amp;quot;requests / SECONDS&amp;quot;,
          &amp;quot;value&amp;quot;: 137416.0
        }
      ]
    }
  },
  &amp;quot;group&amp;quot;:&amp;quot;default&amp;quot;,
  &amp;quot;numberOfPartitions&amp;quot;: 1
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    The topic, which is just created, does not have any metrics.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;update-a-topic-properties&#34;&gt;update a topic properties&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/topics/${name}?group=${group}&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Request&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;numberOfPartitions&amp;quot;: 3
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;brokerClusterKey&amp;quot;: {
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;bk&amp;quot;
  },
  &amp;quot;name&amp;quot;: &amp;quot;topic0&amp;quot;,
  &amp;quot;partitionInfos&amp;quot;: [],
  &amp;quot;lastModified&amp;quot;: 1578537915735,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;numberOfReplications&amp;quot;: 1,
  &amp;quot;nodeMetrics&amp;quot;: {
    &amp;quot;node00&amp;quot;: {
      &amp;quot;meters&amp;quot;: [
        {
          &amp;quot;document&amp;quot;: &amp;quot;BytesInPerSec&amp;quot;,
          &amp;quot;name&amp;quot;: &amp;quot;BytesInPerSec&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585069111069,
          &amp;quot;unit&amp;quot;: &amp;quot;bytes / SECONDS&amp;quot;,
          &amp;quot;value&amp;quot;: 2143210885
        },
        {
          &amp;quot;document&amp;quot;: &amp;quot;MessagesInPerSec&amp;quot;,
          &amp;quot;name&amp;quot;: &amp;quot;MessagesInPerSec&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585069111069,
          &amp;quot;unit&amp;quot;: &amp;quot;messages / SECONDS&amp;quot;,
          &amp;quot;value&amp;quot;: 2810000.0
        },
        {
          &amp;quot;document&amp;quot;: &amp;quot;TotalProduceRequestsPerSec&amp;quot;,
          &amp;quot;name&amp;quot;: &amp;quot;TotalProduceRequestsPerSec&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585069111069,
          &amp;quot;unit&amp;quot;: &amp;quot;requests / SECONDS&amp;quot;,
          &amp;quot;value&amp;quot;: 137416.0
        }
      ]
    }
  },
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
  &amp;quot;numberOfPartitions&amp;quot;: 3
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;list-all-topics-properties&#34;&gt;list all topics properties&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/topics?${key}=${value}&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;the accepted query keys are listed below.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;group&lt;/li&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;li&gt;state&lt;/li&gt;
&lt;li&gt;lastModified&lt;/li&gt;
&lt;li&gt;tags&lt;/li&gt;
&lt;li&gt;tag: this field is similar to tags but it addresses the &amp;ldquo;contain&amp;rdquo; behavior.&lt;/li&gt;
&lt;li&gt;key&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    Using &amp;ldquo;NONE&amp;rdquo; represents the nonexistence of state.
  &lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
  {
    &amp;quot;brokerClusterKey&amp;quot;: {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;bk&amp;quot;
    },
    &amp;quot;name&amp;quot;: &amp;quot;topic1&amp;quot;,
    &amp;quot;partitionInfos&amp;quot;: [],
    &amp;quot;lastModified&amp;quot;: 1578537915735,
    &amp;quot;tags&amp;quot;: {},
    &amp;quot;numberOfReplications&amp;quot;: 1,
  &amp;quot;nodeMetrics&amp;quot;: {
    &amp;quot;node00&amp;quot;: {
      &amp;quot;meters&amp;quot;: [
        {
          &amp;quot;document&amp;quot;: &amp;quot;BytesInPerSec&amp;quot;,
          &amp;quot;name&amp;quot;: &amp;quot;BytesInPerSec&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585069111069,
          &amp;quot;unit&amp;quot;: &amp;quot;bytes / SECONDS&amp;quot;,
          &amp;quot;value&amp;quot;: 2143210885
        },
        {
          &amp;quot;document&amp;quot;: &amp;quot;MessagesInPerSec&amp;quot;,
          &amp;quot;name&amp;quot;: &amp;quot;MessagesInPerSec&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585069111069,
          &amp;quot;unit&amp;quot;: &amp;quot;messages / SECONDS&amp;quot;,
          &amp;quot;value&amp;quot;: 2810000.0
        },
        {
          &amp;quot;document&amp;quot;: &amp;quot;TotalProduceRequestsPerSec&amp;quot;,
          &amp;quot;name&amp;quot;: &amp;quot;TotalProduceRequestsPerSec&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585069111069,
          &amp;quot;unit&amp;quot;: &amp;quot;requests / SECONDS&amp;quot;,
          &amp;quot;value&amp;quot;: 137416.0
        }
      ]
    }
  },
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
    &amp;quot;numberOfPartitions&amp;quot;: 3
  }
]
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;delete-a-topic-properties&#34;&gt;delete a topic properties&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;DELETE /v0/topics/${name}?group=${group}&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;204 NoContent
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    It is ok to delete a nonexistent topic, and the response is &lt;strong&gt;204 NoContent&lt;/strong&gt;.
You must be stopped the delete topic.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;get&#34;&gt;get a topic properties&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/topics/${name}&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;brokerClusterKey&amp;quot;: {
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;bk&amp;quot;
  },
  &amp;quot;name&amp;quot;: &amp;quot;topic1&amp;quot;,
  &amp;quot;partitionInfos&amp;quot;: [],
  &amp;quot;lastModified&amp;quot;: 1578537915735,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;numberOfReplications&amp;quot;: 1,
  &amp;quot;nodeMetrics&amp;quot;: {
    &amp;quot;node00&amp;quot;: {
      &amp;quot;meters&amp;quot;: [
        {
          &amp;quot;document&amp;quot;: &amp;quot;BytesInPerSec&amp;quot;,
          &amp;quot;name&amp;quot;: &amp;quot;BytesInPerSec&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585069111069,
          &amp;quot;unit&amp;quot;: &amp;quot;bytes / SECONDS&amp;quot;,
          &amp;quot;value&amp;quot;: 2143210885
        },
        {
          &amp;quot;document&amp;quot;: &amp;quot;MessagesInPerSec&amp;quot;,
          &amp;quot;name&amp;quot;: &amp;quot;MessagesInPerSec&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585069111069,
          &amp;quot;unit&amp;quot;: &amp;quot;messages / SECONDS&amp;quot;,
          &amp;quot;value&amp;quot;: 2810000.0
        },
        {
          &amp;quot;document&amp;quot;: &amp;quot;TotalProduceRequestsPerSec&amp;quot;,
          &amp;quot;name&amp;quot;: &amp;quot;TotalProduceRequestsPerSec&amp;quot;,
          &amp;quot;queryTime&amp;quot;: 1585069111069,
          &amp;quot;unit&amp;quot;: &amp;quot;requests / SECONDS&amp;quot;,
          &amp;quot;value&amp;quot;: 137416.0
        }
      ]
    }
  },
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
  &amp;quot;numberOfPartitions&amp;quot;: 3
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;start-a-topic-on-remote-broker-cluster&#34;&gt;start a topic on remote broker cluster&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/topics/${name}/start&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code&gt;202 Accepted
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    You should use &lt;a href=&#34;#get&#34;&gt;Get Topic info&lt;/a&gt; to fetch up-to-date status
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;stop-a-topic-from-remote-broker-cluster&#34;&gt;stop a topic from remote broker cluster&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/topics/${name}/stop&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    the topic will lose all data after stopping.
  &lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code&gt;202 Accepted
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    You should use &lt;a href=&#34;#get&#34;&gt;Get Topic info&lt;/a&gt; to fetch up-to-date status
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Validation</title>
      <link>https://oharastream.github.io/en/docs/master/rest-api/validate/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0100</pubDate>
      <guid>https://oharastream.github.io/en/docs/master/rest-api/validate/</guid>
      <description>&lt;p&gt;Notwithstanding we have read a lot of document and guideline, there is a
chance to input incorrect request or settings when operating Ohara.
Hence, Ohara provides a serial APIs used to validate request/settings
before you do use them to start service. Noted that not all
request/settings are validated by Ohara configurator. If the
request/settings is used by other system (for example, kafka), Ohara
automatically bypass the validation request to target system and then
wrap the result to JSON representation.&lt;/p&gt;
&lt;h2 id=&#34;validate-the-connector-settings&#34;&gt;Validate the connector settings&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/validate/connector&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Before starting a connector, you can send the settings to test whether
all settings are available for the specific connector. Ohara is not in
charge of settings validation. Connector MUST define its setting via

&lt;a href=&#34;https://oharastream.github.io/en/docs/master/setting_definition/&#34;&gt;setting definitions&lt;/a&gt;.
Ohara configurator only repackage the request to kafka
format and then collect the validation result from kafka.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Request&lt;/p&gt;
&lt;p&gt;The request format is same as 
&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/connectors/#create-settings&#34;&gt;connector request&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;p&gt;If target connector has defined the settings correctly, kafka is
doable to validate each setting of request. Ohara configurator
collect the result and then generate the following report.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;errorCount&amp;quot;: 0,
  &amp;quot;settings&amp;quot;: [
    {
      &amp;quot;definition&amp;quot;: {
        &amp;quot;displayName&amp;quot;: &amp;quot;Connector class&amp;quot;,
        &amp;quot;group&amp;quot;: &amp;quot;core&amp;quot;,
        &amp;quot;orderInGroup&amp;quot;: 3,
        &amp;quot;key&amp;quot;: &amp;quot;connector.class&amp;quot;,
        &amp;quot;valueType&amp;quot;: &amp;quot;CLASS&amp;quot;,
        &amp;quot;necessary&amp;quot;: &amp;quot;REQUIRED&amp;quot;,
        &amp;quot;defaultValue&amp;quot;: null,
        &amp;quot;documentation&amp;quot;: &amp;quot;the class name of connector&amp;quot;,
        &amp;quot;reference&amp;quot;: &amp;quot;NONE&amp;quot;,
        &amp;quot;regex&amp;quot;: null,
        &amp;quot;internal&amp;quot;: false,
        &amp;quot;permission&amp;quot;: &amp;quot;EDITABLE&amp;quot;,
        &amp;quot;tableKeys&amp;quot;: [],
        &amp;quot;recommendedValues&amp;quot;: [],
        &amp;quot;blacklist&amp;quot;: []
      },
      &amp;quot;value&amp;quot;: {
        &amp;quot;key&amp;quot;: &amp;quot;connector.class&amp;quot;,
        &amp;quot;value&amp;quot;: &amp;quot;oharastream.ohara.connector.perf.PerfSource&amp;quot;,
        &amp;quot;errors&amp;quot;: []
      }
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The above example only show a part of report. The element &lt;strong&gt;definition&lt;/strong&gt;
is equal to

&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/workers/&#34;&gt;connector’s setting definition&lt;/a&gt;.
The definition is what connector must define. If you don&amp;rsquo;t
write any definitions for you connector, the validation will do nothing
for you. The element &lt;strong&gt;value&lt;/strong&gt; is what you request to validate.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;key (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the property key. It is equal to key in &lt;strong&gt;definition&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;value (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the value you request to validate&lt;/li&gt;
&lt;li&gt;errors (&lt;strong&gt;array(string)&lt;/strong&gt;) &amp;mdash; error message when the input value is
illegal to connector&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Worker</title>
      <link>https://oharastream.github.io/en/docs/master/rest-api/workers/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0100</pubDate>
      <guid>https://oharastream.github.io/en/docs/master/rest-api/workers/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://kafka.apache.org/intro&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Worker&lt;/a&gt; is core of running connectors
for Ohara. It provides a simple but powerful system to distribute and
execute connectors on different nodes. The performance of connectors
depends on the scale of worker cluster. For example, you can assign the
number of task when creating connector. If there is only 3 nodes within
your worker cluster and you specify 6 tasks for your connector, the
tasks of you connectors still be deployed on 3 nodes. That is to say,
the connector can&amp;rsquo;t get more resources to execute.&lt;/p&gt;
&lt;p&gt;Worker is based on 
&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/brokers/&#34;&gt;Broker&lt;/a&gt;,
hence you have to create broker cluster first. Noted that a
broker cluster can be used by multi worker clusters. BTW, worker cluster
will pre-allocate a lot of topics on broker cluster, and the pre-created
topics CAN&amp;rsquo;T be reused by different worker clusters.&lt;/p&gt;
&lt;p&gt;The properties which can be set by user are shown below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; cluster name. The legal character is number,
lowercase alphanumeric characters, or &amp;lsquo;.&amp;rsquo;&lt;/li&gt;
&lt;li&gt;group (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; cluster group. The legal character is number,
lowercase alphanumeric characters, or &amp;lsquo;.&amp;rsquo;&lt;/li&gt;
&lt;li&gt;imageName (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; docker image&lt;/li&gt;
&lt;li&gt;brokerClusterKey (&lt;strong&gt;Object&lt;/strong&gt;) &amp;mdash; the broker cluster used to store
data generated by this worker cluster
&lt;ul&gt;
&lt;li&gt;brokerClusterKey.group (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; the group of
cluster&lt;/li&gt;
&lt;li&gt;brokerClusterKey.name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the name of cluster&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    the following forms are legal as well: (1) &lt;code&gt;{&amp;quot;name&amp;quot;: &amp;quot;n&amp;quot;}&lt;/code&gt;, (2) &lt;code&gt;&amp;quot;n&amp;quot;&lt;/code&gt;.
Both forms are converted to &lt;code&gt;{&amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;n&amp;quot;}&lt;/code&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;
&lt;p&gt;clientPort (&lt;strong&gt;int&lt;/strong&gt;) &amp;mdash; worker client port&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;jmxPort (&lt;strong&gt;int&lt;/strong&gt;) &amp;mdash; worker jmx port&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;freePorts (&lt;strong&gt;Array(int)&lt;/strong&gt;) &amp;mdash; the ports you want to pre-bind for the connectors.&lt;/p&gt;
&lt;p&gt;If your connectors want to build a service on a port which is available
to external nodes, you have to define the free ports for your worker cluster
so as to make Configurator pre-bind the ports on your worker
cluster. Otherwise, your connectors is disable to build service
on the port of worker cluster and be connected by external node.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;group.id (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; the id of worker stored in broker cluster&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;config.storage.topic (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; a internal topic used to store
connector configuration&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;config.storage.replication.factor (&lt;strong&gt;int&lt;/strong&gt;) &amp;mdash; number of
replications for config topic&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;offset.storage.topic (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; a internal topic used to store
connector offset&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;offset.storage.partitions (&lt;strong&gt;int&lt;/strong&gt;) &amp;mdash; number of partitions for
offset topic&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;offset.storage.replication.factor (&lt;strong&gt;int&lt;/strong&gt;) &amp;mdash; number of
replications for offset topic&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;status.storage.topic (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; an internal topic used to store
connector status&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;status.storage.partitions (&lt;strong&gt;int&lt;/strong&gt;) &amp;mdash; number of partitions for
status topic&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;status.storage.replication.factor (&lt;strong&gt;int&lt;/strong&gt;) &amp;mdash; number of
replications for status topic&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pluginKeys (&lt;strong&gt;array(object)&lt;/strong&gt;) &amp;mdash; the &amp;ldquo;primary key&amp;rdquo; of jars which contain your connectors&lt;/p&gt;
&lt;p&gt;You can require worker cluster to load the jars stored in ohara
if you want to run custom connectors on the worker cluster. see

&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/files/&#34;&gt;Files APIs&lt;/a&gt; for
uploading jars to ohara. The files which are deployed to worker
must be uber jars - it must include all dependencies exclude for
ohara stuff.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sharedJarKeys (&lt;strong&gt;array(object)&lt;/strong&gt;) &amp;mdash; those jars is deployed on the root classpath so
all connectors are able to load them.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    &lt;ol&gt;
&lt;li&gt;
&lt;p&gt;When you implement the Ohara connector, you must use the
File API upload connector jar file to worker.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If your jdbc source connector need to use the third party
jar file (such oracle jdbc jar file), you must use the File
API upload jar file then setting sharedJarKeys to create the
worker API.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;ol start=&#34;19&#34;&gt;
&lt;li&gt;
&lt;p&gt;nodeNames (&lt;strong&gt;array(string)&lt;/strong&gt;) &amp;mdash; the nodes running the worker
process&lt;/p&gt;
&lt;p&gt;The following information are updated by Ohara.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;aliveNodes (&lt;strong&gt;array(string)&lt;/strong&gt;) &amp;mdash; the nodes that host the running
containers of worker&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    The group.id, config.storage.topic, offset.storage.topic and
status.storage.topic must be unique in broker cluster. Don&amp;rsquo;t reuse
them in same broker cluster. Dispatching above unique resources to
two worker cluster will pollute the data. Of course, Ohara do a
quick failure for this dumb case. However, it is not a quick
failure when you are using raw kafka rather than Ohara. Please
double check what you configure!
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;rest-workers-create&#34;&gt;create a worker properties&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;POST /v0/workers&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Request&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;wk&amp;quot;,
  &amp;quot;nodeNames&amp;quot;: [&amp;quot;node00&amp;quot;],
  &amp;quot;brokerClusterKey&amp;quot;: &amp;quot;bk&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;brokerClusterKey&amp;quot;: {
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;bk00&amp;quot;
  },
  &amp;quot;name&amp;quot;: &amp;quot;wk00&amp;quot;,
  &amp;quot;offset.storage.partitions&amp;quot;: 1,
  &amp;quot;xms&amp;quot;: 2048,
  &amp;quot;routes&amp;quot;: {},
  &amp;quot;config.storage.topic&amp;quot;: &amp;quot;b8dadc3de21048fa927335b8f&amp;quot;,
  &amp;quot;sharedJarKeys&amp;quot;: [],
  &amp;quot;lastModified&amp;quot;: 1578982566359,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;xmx&amp;quot;: 2048,
  &amp;quot;imageName&amp;quot;: &amp;quot;oharastream/connect-worker:0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;offset.storage.topic&amp;quot;: &amp;quot;346b839ea3e74387ab1eea409&amp;quot;,
  &amp;quot;status.storage.replication.factor&amp;quot;: 1,
  &amp;quot;group.id&amp;quot;: &amp;quot;af4b4d49234a4848bb90fb452&amp;quot;,
  &amp;quot;offset.storage.replication.factor&amp;quot;: 1,
  &amp;quot;aliveNodes&amp;quot;: [],
  &amp;quot;pluginKeys&amp;quot;: [],
  &amp;quot;status.storage.partitions&amp;quot;: 1,
  &amp;quot;freePorts&amp;quot;: [],
  &amp;quot;jmxPort&amp;quot;: 33333,
  &amp;quot;config.storage.partitions&amp;quot;: 1,
  &amp;quot;clientPort&amp;quot;: 45127,
  &amp;quot;config.storage.replication.factor&amp;quot;: 1,
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
  &amp;quot;nodeNames&amp;quot;: [
    &amp;quot;node00&amp;quot;
  ],
  &amp;quot;status.storage.topic&amp;quot;: &amp;quot;1cdca943f0b945bc892ebe9a7&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;rest-workers-list&#34;&gt;list all workers clusters&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/workers&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
  {
    &amp;quot;brokerClusterKey&amp;quot;: {
      &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;bk00&amp;quot;
    },
    &amp;quot;name&amp;quot;: &amp;quot;wk00&amp;quot;,
    &amp;quot;offset.storage.partitions&amp;quot;: 1,
    &amp;quot;xms&amp;quot;: 2048,
    &amp;quot;routes&amp;quot;: {},
    &amp;quot;config.storage.topic&amp;quot;: &amp;quot;b8dadc3de21048fa927335b8f&amp;quot;,
    &amp;quot;sharedJarKeys&amp;quot;: [],
    &amp;quot;lastModified&amp;quot;: 1578982566359,
    &amp;quot;tags&amp;quot;: {},
    &amp;quot;xmx&amp;quot;: 2048,
    &amp;quot;imageName&amp;quot;: &amp;quot;oharastream/connect-worker:0.11.0-SNAPSHOT&amp;quot;,
    &amp;quot;offset.storage.topic&amp;quot;: &amp;quot;346b839ea3e74387ab1eea409&amp;quot;,
    &amp;quot;status.storage.replication.factor&amp;quot;: 1,
    &amp;quot;group.id&amp;quot;: &amp;quot;af4b4d49234a4848bb90fb452&amp;quot;,
    &amp;quot;offset.storage.replication.factor&amp;quot;: 1,
    &amp;quot;aliveNodes&amp;quot;: [],
    &amp;quot;pluginKeys&amp;quot;: [],
    &amp;quot;status.storage.partitions&amp;quot;: 1,
    &amp;quot;freePorts&amp;quot;: [],
    &amp;quot;jmxPort&amp;quot;: 33333,
    &amp;quot;config.storage.partitions&amp;quot;: 1,
    &amp;quot;clientPort&amp;quot;: 45127,
    &amp;quot;config.storage.replication.factor&amp;quot;: 1,
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
    &amp;quot;nodeNames&amp;quot;: [
      &amp;quot;node00&amp;quot;
    ],
    &amp;quot;status.storage.topic&amp;quot;: &amp;quot;1cdca943f0b945bc892ebe9a7&amp;quot;
  }
]
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;update-broker-cluster-properties&#34;&gt;update broker cluster properties&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/workers/$name?group=$group&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    If the required worker (group, name) was not exists, we will try to use
this request as POST
  &lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Request&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;jmxPort&amp;quot;: 7777
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;brokerClusterKey&amp;quot;: {
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;bk00&amp;quot;
  },
  &amp;quot;name&amp;quot;: &amp;quot;wk00&amp;quot;,
  &amp;quot;offset.storage.partitions&amp;quot;: 1,
  &amp;quot;xms&amp;quot;: 2048,
  &amp;quot;routes&amp;quot;: {},
  &amp;quot;config.storage.topic&amp;quot;: &amp;quot;b8dadc3de21048fa927335b8f&amp;quot;,
  &amp;quot;sharedJarKeys&amp;quot;: [],
  &amp;quot;lastModified&amp;quot;: 1578982765738,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;xmx&amp;quot;: 2048,
  &amp;quot;imageName&amp;quot;: &amp;quot;oharastream/connect-worker:0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;offset.storage.topic&amp;quot;: &amp;quot;346b839ea3e74387ab1eea409&amp;quot;,
  &amp;quot;status.storage.replication.factor&amp;quot;: 1,
  &amp;quot;group.id&amp;quot;: &amp;quot;af4b4d49234a4848bb90fb452&amp;quot;,
  &amp;quot;offset.storage.replication.factor&amp;quot;: 1,
  &amp;quot;aliveNodes&amp;quot;: [],
  &amp;quot;pluginKeys&amp;quot;: [],
  &amp;quot;status.storage.partitions&amp;quot;: 1,
  &amp;quot;freePorts&amp;quot;: [],
  &amp;quot;jmxPort&amp;quot;: 7777,
  &amp;quot;config.storage.partitions&amp;quot;: 1,
  &amp;quot;clientPort&amp;quot;: 45127,
  &amp;quot;config.storage.replication.factor&amp;quot;: 1,
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
  &amp;quot;nodeNames&amp;quot;: [
    &amp;quot;node00&amp;quot;
  ],
  &amp;quot;status.storage.topic&amp;quot;: &amp;quot;1cdca943f0b945bc892ebe9a7&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;delete-a-worker-properties&#34;&gt;delete a worker properties&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;DELETE /v0/workers/$name?group=$group&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You cannot delete properties of an non-stopped worker cluster. We will
use the default value as the query parameter &amp;ldquo;?group=&amp;rdquo; if you don&amp;rsquo;t
specify it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code&gt;204 NoContent
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    It is ok to delete an nonexistent worker cluster, and the response
is 204 NoContent.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;rest-workers-get&#34;&gt;get a worker cluster&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/workers/$name?group=$group&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We will use the default value as the query parameter &amp;ldquo;?group=&amp;rdquo; if you
don&amp;rsquo;t specify it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;brokerClusterKey&amp;quot;: {
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;bk00&amp;quot;
  },
  &amp;quot;name&amp;quot;: &amp;quot;wk00&amp;quot;,
  &amp;quot;offset.storage.partitions&amp;quot;: 1,
  &amp;quot;xms&amp;quot;: 2048,
  &amp;quot;routes&amp;quot;: {},
  &amp;quot;config.storage.topic&amp;quot;: &amp;quot;b8dadc3de21048fa927335b8f&amp;quot;,
  &amp;quot;sharedJarKeys&amp;quot;: [],
  &amp;quot;lastModified&amp;quot;: 1578982765738,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;xmx&amp;quot;: 2048,
  &amp;quot;imageName&amp;quot;: &amp;quot;oharastream/connect-worker:0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;offset.storage.topic&amp;quot;: &amp;quot;346b839ea3e74387ab1eea409&amp;quot;,
  &amp;quot;status.storage.replication.factor&amp;quot;: 1,
  &amp;quot;group.id&amp;quot;: &amp;quot;af4b4d49234a4848bb90fb452&amp;quot;,
  &amp;quot;offset.storage.replication.factor&amp;quot;: 1,
  &amp;quot;aliveNodes&amp;quot;: [],
  &amp;quot;pluginKeys&amp;quot;: [],
  &amp;quot;status.storage.partitions&amp;quot;: 1,
  &amp;quot;freePorts&amp;quot;: [],
  &amp;quot;jmxPort&amp;quot;: 7777,
  &amp;quot;config.storage.partitions&amp;quot;: 1,
  &amp;quot;clientPort&amp;quot;: 45127,
  &amp;quot;config.storage.replication.factor&amp;quot;: 1,
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
  &amp;quot;nodeNames&amp;quot;: [
    &amp;quot;node00&amp;quot;
  ],
  &amp;quot;status.storage.topic&amp;quot;: &amp;quot;1cdca943f0b945bc892ebe9a7&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;start-a-worker-cluster&#34;&gt;start a worker cluster&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/workers/$name/start?group=$group&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We will use the default value as the query parameter &amp;ldquo;?group=&amp;rdquo; if you
don&amp;rsquo;t specify it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code&gt;202 Accepted
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    You should use &lt;a href=&#34;#rest-workers-get&#34;&gt;Get worker cluster&lt;/a&gt; to fetch up-to-date status
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;stop-a-worker-cluster&#34;&gt;stop a worker cluster&lt;/h2&gt;
&lt;p&gt;Gracefully stopping a running worker cluster.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/workers/$name/stop?group=$group[&amp;amp;force=true]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We will use the default value as the query parameter &amp;ldquo;?group=&amp;rdquo; if you
don&amp;rsquo;t specify it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Query Parameters&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;force (&lt;strong&gt;boolean&lt;/strong&gt;) &amp;mdash; true if you don&amp;rsquo;t want to wait the
graceful shutdown (it can save your time but may damage your
data).&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;202 Accepted
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    You should use &lt;a href=&#34;#rest-workers-get&#34;&gt;Get worker cluster&lt;/a&gt; to fetch up-to-date status
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;add-a-new-node-to-a-running-worker-cluster&#34;&gt;add a new node to a running worker cluster&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/workers/$name/$nodeName?group=$group&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We will use the default value as the query parameter &amp;ldquo;?group=&amp;rdquo; if you
don&amp;rsquo;t specify it.&lt;/p&gt;
&lt;p&gt;If you want to extend a running worker cluster, you can add a node to
share the heavy loading of a running worker cluster. However, the
balance is not triggered at once. By the way, moving a task to another
idle node needs to &lt;strong&gt;stop&lt;/strong&gt; task first. Don&amp;rsquo;t worry about the temporary
lower throughput when balancer is running.&lt;/p&gt;
&lt;h2 id=&#34;remove-a-node-from-a-running-worker-cluster&#34;&gt;remove a node from a running worker cluster&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;DELETE /v0/workers/$name/$nodeName?group=$group&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We will use the default value as the query parameter &amp;ldquo;?group=&amp;rdquo; if you
don&amp;rsquo;t specify it.&lt;/p&gt;
&lt;p&gt;If your budget is limited, you can decrease the number of nodes running
worker cluster. BUT, removing a node from a running worker cluster
invoke a lot of task move, and it will decrease the throughput of your
connector.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code&gt;204 NoContent
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    It is ok to delete an nonexistent worker node, and the response is
204 NoContent.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Zookeeper</title>
      <link>https://oharastream.github.io/en/docs/master/rest-api/zookeepers/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0100</pubDate>
      <guid>https://oharastream.github.io/en/docs/master/rest-api/zookeepers/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://zookeeper.apache.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Zookeeper&lt;/a&gt; service is the base of all
other services. It is also the fist service you should set up. At the
beginning, you can deploy zookeeper cluster in single node. However, it
may be unstable since single node can&amp;rsquo;t guarantee the data durability
when node crash. In production you should set up zookeeper cluster on 3
nodes at least.&lt;/p&gt;
&lt;p&gt;Zookeeper service has many configs which make you spend a lot of time to
read and set. Ohara provides default values to all configs but open a
room to enable you to overwrite somethings you do care.&lt;/p&gt;
&lt;p&gt;The properties which can be set by user are shown below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;name (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; cluster name. The legal character is number,
lowercase alphanumeric characters, or &amp;lsquo;.&amp;rsquo;&lt;/li&gt;
&lt;li&gt;group (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; cluster group. The legal character is number,
lowercase alphanumeric characters, or &amp;lsquo;.&amp;rsquo;&lt;/li&gt;
&lt;li&gt;imageName (&lt;strong&gt;string&lt;/strong&gt;) &amp;mdash; docker image&lt;/li&gt;
&lt;li&gt;jmxPort (&lt;strong&gt;int&lt;/strong&gt;) &amp;mdash; zookeeper jmx port&lt;/li&gt;
&lt;li&gt;clientPort (&lt;strong&gt;int&lt;/strong&gt;) &amp;mdash; zookeeper client port&lt;/li&gt;
&lt;li&gt;electionPort (&lt;strong&gt;int&lt;/strong&gt;) &amp;mdash; used to select the zk node leader&lt;/li&gt;
&lt;li&gt;peerPort (&lt;strong&gt;int&lt;/strong&gt;) &amp;mdash; port used by internal communication&lt;/li&gt;
&lt;li&gt;nodeNames (&lt;strong&gt;array(string)&lt;/strong&gt;) &amp;mdash; the nodes running the zookeeper
process&lt;/li&gt;
&lt;li&gt;tags (&lt;strong&gt;object&lt;/strong&gt;) &amp;mdash; the user defined parameters&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following information are updated by Ohara.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;aliveNodes (&lt;strong&gt;array(string)&lt;/strong&gt;) &amp;mdash; the nodes that host the running
containers of zookeeper&lt;/li&gt;
&lt;li&gt;state (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; only started/failed zookeeper has
state (RUNNING or DEAD)&lt;/li&gt;
&lt;li&gt;error (&lt;strong&gt;option(string)&lt;/strong&gt;) &amp;mdash; the error message from a failed
zookeeper. If zookeeper is fine or un-started, you won&amp;rsquo;t get this
field.&lt;/li&gt;
&lt;li&gt;lastModified (&lt;strong&gt;long&lt;/strong&gt;) &amp;mdash; last modified this jar time&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;create-properties&#34;&gt;create a zookeeper properties&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;POST /v0/zookeepers&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Request&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;zk&amp;quot;,
  &amp;quot;nodeNames&amp;quot;: [
    &amp;quot;node00&amp;quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;syncLimit&amp;quot;: 5,
  &amp;quot;name&amp;quot;: &amp;quot;zk00&amp;quot;,
  &amp;quot;xms&amp;quot;: 1024,
  &amp;quot;routes&amp;quot;: {},
  &amp;quot;lastModified&amp;quot;: 1578642569693,
  &amp;quot;dataDir&amp;quot;: &amp;quot;/home/ohara/default/data&amp;quot;,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;electionPort&amp;quot;: 44371,
  &amp;quot;xmx&amp;quot;: 1024,
  &amp;quot;imageName&amp;quot;: &amp;quot;oharastream/zookeeper:0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;aliveNodes&amp;quot;: [],
  &amp;quot;initLimit&amp;quot;: 10,
  &amp;quot;jmxPort&amp;quot;: 33915,
  &amp;quot;clientPort&amp;quot;: 42006,
  &amp;quot;peerPort&amp;quot;: 46559,
  &amp;quot;tickTime&amp;quot;: 2000,
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
  &amp;quot;nodeNames&amp;quot;: [
    &amp;quot;node00&amp;quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    All ports have default value so you can ignore them when creating
zookeeper cluster. However, the port conflict detect does not allow
you to reuse port on different purpose (a dangerous behavior, right?).
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;list-all-zookeeper-clusters&#34;&gt;list all zookeeper clusters&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/zookeepers&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;the accepted query keys are listed below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;group&lt;/li&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;li&gt;lastModified&lt;/li&gt;
&lt;li&gt;tags&lt;/li&gt;
&lt;li&gt;tag - this field is similar to tags but it addresses the &amp;ldquo;contain&amp;rdquo;
behavior.&lt;/li&gt;
&lt;li&gt;state&lt;/li&gt;
&lt;li&gt;aliveNodes&lt;/li&gt;
&lt;li&gt;key&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
  {
    &amp;quot;syncLimit&amp;quot;: 5,
    &amp;quot;name&amp;quot;: &amp;quot;zk00&amp;quot;,
    &amp;quot;xms&amp;quot;: 1024,
    &amp;quot;routes&amp;quot;: {},
    &amp;quot;lastModified&amp;quot;: 1578642569693,
    &amp;quot;dataDir&amp;quot;: &amp;quot;/home/ohara/default/data&amp;quot;,
    &amp;quot;tags&amp;quot;: {},
    &amp;quot;electionPort&amp;quot;: 44371,
    &amp;quot;xmx&amp;quot;: 1024,
    &amp;quot;imageName&amp;quot;: &amp;quot;oharastream/zookeeper:0.11.0-SNAPSHOT&amp;quot;,
    &amp;quot;aliveNodes&amp;quot;: [],
    &amp;quot;initLimit&amp;quot;: 10,
    &amp;quot;jmxPort&amp;quot;: 33915,
    &amp;quot;clientPort&amp;quot;: 42006,
    &amp;quot;peerPort&amp;quot;: 46559,
    &amp;quot;tickTime&amp;quot;: 2000,
    &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
    &amp;quot;nodeNames&amp;quot;: [
      &amp;quot;node00&amp;quot;
    ]
  }
]
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;update-zookeeper-cluster-properties&#34;&gt;update zookeeper cluster properties&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/zookeepers/$name?group=$group&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    If the required zookeeper (group, name) was not exists, we will try to
use this request as POST
  &lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Request&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;jmxPort&amp;quot;: 12345
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;syncLimit&amp;quot;: 5,
  &amp;quot;name&amp;quot;: &amp;quot;zk00&amp;quot;,
  &amp;quot;xms&amp;quot;: 1024,
  &amp;quot;routes&amp;quot;: {},
  &amp;quot;lastModified&amp;quot;: 1578642751122,
  &amp;quot;dataDir&amp;quot;: &amp;quot;/home/ohara/default/data&amp;quot;,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;electionPort&amp;quot;: 44371,
  &amp;quot;xmx&amp;quot;: 1024,
  &amp;quot;imageName&amp;quot;: &amp;quot;oharastream/zookeeper:0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;aliveNodes&amp;quot;: [],
  &amp;quot;initLimit&amp;quot;: 10,
  &amp;quot;jmxPort&amp;quot;: 12345,
  &amp;quot;clientPort&amp;quot;: 42006,
  &amp;quot;peerPort&amp;quot;: 46559,
  &amp;quot;tickTime&amp;quot;: 2000,
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
  &amp;quot;nodeNames&amp;quot;: [
    &amp;quot;node00&amp;quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;delete-a-zookeeper-properties&#34;&gt;delete a zookeeper properties&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;DELETE /v0/zookeepers/$name?group=$group&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You cannot delete properties of an non-stopped zookeeper cluster. We
will use the default value as the query parameter &amp;ldquo;?group=&amp;rdquo; if you
don&amp;rsquo;t specify it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;204 NoContent
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    It is ok to delete an nonexistent zookeeper cluster, and the
response is 204 NoContent.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;get&#34;&gt;get a zookeeper cluster&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GET /v0/zookeepers/$name?group=$group&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Get zookeeper information by name and group. This API could fetch all
information of a zookeeper (include state). We will use the default
value as the query parameter &amp;ldquo;?group=&amp;rdquo; if you don&amp;rsquo;t specify it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;syncLimit&amp;quot;: 5,
  &amp;quot;name&amp;quot;: &amp;quot;zk00&amp;quot;,
  &amp;quot;xms&amp;quot;: 1024,
  &amp;quot;routes&amp;quot;: {},
  &amp;quot;lastModified&amp;quot;: 1578642569693,
  &amp;quot;dataDir&amp;quot;: &amp;quot;/home/ohara/default/data&amp;quot;,
  &amp;quot;tags&amp;quot;: {},
  &amp;quot;electionPort&amp;quot;: 44371,
  &amp;quot;xmx&amp;quot;: 1024,
  &amp;quot;imageName&amp;quot;: &amp;quot;oharastream/zookeeper:0.11.0-SNAPSHOT&amp;quot;,
  &amp;quot;aliveNodes&amp;quot;: [],
  &amp;quot;initLimit&amp;quot;: 10,
  &amp;quot;jmxPort&amp;quot;: 33915,
  &amp;quot;clientPort&amp;quot;: 42006,
  &amp;quot;peerPort&amp;quot;: 46559,
  &amp;quot;tickTime&amp;quot;: 2000,
  &amp;quot;group&amp;quot;: &amp;quot;default&amp;quot;,
  &amp;quot;nodeNames&amp;quot;: [
    &amp;quot;node00&amp;quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;start-a-zookeeper-cluster&#34;&gt;start a zookeeper cluster&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/zookeepers/$name/start?group=$group&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We will use the default value as the query parameter &amp;ldquo;?group=&amp;rdquo; if you
don&amp;rsquo;t specify it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example Response
&lt;pre&gt;&lt;code&gt;202 Accepted
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    You should use &lt;a href=&#34;#get&#34;&gt;Get zookeeper cluster&lt;/a&gt; to fetch
up-to-date status
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;stop-a-zookeeper-cluster&#34;&gt;stop a zookeeper cluster&lt;/h2&gt;
&lt;p&gt;Gracefully stopping a running zookeeper cluster. It is disallowed to
stop a zookeeper cluster used by a running

&lt;a href=&#34;https://oharastream.github.io/en/docs/master/rest-api/brokers/&#34;&gt;broker cluster&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;PUT /v0/zookeepers/$name/stop?group=$group[&amp;amp;force=true]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We will use the default value as the query parameter &amp;ldquo;?group=&amp;rdquo; if you
don&amp;rsquo;t specify it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Query Parameters&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;force (&lt;strong&gt;boolean&lt;/strong&gt;) - true if you don&amp;rsquo;t want to wait the
graceful shutdown (it can save your time but may damage your
data).&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example Response&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;202 Accepted
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-hint&#34;&gt;
  &lt;div&gt;
    You should use &lt;a href=&#34;#get&#34;&gt;Get zookeeper cluster&lt;/a&gt;
to fetch up-to-date status
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;delete-a-node-from-a-running-zookeeper-cluster&#34;&gt;delete a node from a running zookeeper cluster&lt;/h2&gt;
&lt;p&gt;Unfortunately, it is a litter dangerous to remove a node from a running
zookeeper cluster so we don&amp;rsquo;t support it yet.&lt;/p&gt;
&lt;h2 id=&#34;add-a-node-to-a-running-zookeeper-cluster&#34;&gt;add a node to a running zookeeper cluster&lt;/h2&gt;
&lt;p&gt;Unfortunately, it is a litter hard to add a node to a running zookeeper
cluster so we don&amp;rsquo;t support it yet.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
